{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1KLyqw8xI3jlUfRmh0lKEvk1TWJ1hMKsW","authorship_tag":"ABX9TyOrpC5OuyHqv/FncBoqQ4Nh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":41,"metadata":{"id":"m1mYVMBkEBL3","executionInfo":{"status":"ok","timestamp":1723868220007,"user_tz":-330,"elapsed":1124,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"outputs":[],"source":[" import pandas as pd\n"," import numpy as np\n"," import matplotlib.pyplot as plt\n"," import seaborn as sns"]},{"cell_type":"code","source":["df=pd.read_csv('/content/drive/MyDrive/claimants.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"jWZv90RVFYyR","executionInfo":{"status":"ok","timestamp":1723868220007,"user_tz":-330,"elapsed":40,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"8cac0c0c-6bb2-4e48-c010-dcffd614a64d"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CASENUM  ATTORNEY  CLMSEX  CLMINSUR  SEATBELT  CLMAGE    LOSS\n","0           5         0     0.0       1.0       0.0    50.0  34.940\n","1           3         1     1.0       0.0       0.0    18.0   0.891\n","2          66         1     0.0       1.0       0.0     5.0   0.330\n","3          70         0     0.0       1.0       1.0    31.0   0.037\n","4          96         1     0.0       1.0       0.0    30.0   0.038\n","...       ...       ...     ...       ...       ...     ...     ...\n","1335    34100         1     0.0       1.0       0.0     NaN   0.576\n","1336    34110         0     1.0       1.0       0.0    46.0   3.705\n","1337    34113         1     1.0       1.0       0.0    39.0   0.099\n","1338    34145         0     1.0       0.0       0.0     8.0   3.177\n","1339    34153         1     1.0       1.0       0.0    30.0   0.688\n","\n","[1340 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-d7c7cc0e-e4f6-4765-880a-d1e67488759b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CASENUM</th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>34.940</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>0.891</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.330</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>31.0</td>\n","      <td>0.037</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>96</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.038</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>34100</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.576</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>34110</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>46.0</td>\n","      <td>3.705</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>34113</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.0</td>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>1338</th>\n","      <td>34145</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>3.177</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>34153</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.688</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1340 rows Ã— 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7c7cc0e-e4f6-4765-880a-d1e67488759b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d7c7cc0e-e4f6-4765-880a-d1e67488759b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d7c7cc0e-e4f6-4765-880a-d1e67488759b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0eb2b316-26f2-4567-960a-c80a210158dc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0eb2b316-26f2-4567-960a-c80a210158dc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0eb2b316-26f2-4567-960a-c80a210158dc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b89d5775-cb17-4689-992e-adebad7c43b6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b89d5775-cb17-4689-992e-adebad7c43b6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1340,\n  \"fields\": [\n    {\n      \"column\": \"CASENUM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9512,\n        \"min\": 0,\n        \"max\": 34153,\n        \"num_unique_values\": 1283,\n        \"samples\": [\n          33440,\n          33455,\n          7140\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49672527823109297,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28967139032188993,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12942519349117368,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.30445058496312,\n        \"min\": 0.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          15.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.63690317364136,\n        \"min\": 0.0,\n        \"max\": 173.604,\n        \"num_unique_values\": 916,\n        \"samples\": [\n          7.068,\n          0.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"fTzwmCUUFjcP","executionInfo":{"status":"ok","timestamp":1723868220008,"user_tz":-330,"elapsed":27,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"a5692867-c5af-4d9b-acbb-cbf059c533ac"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CASENUM  ATTORNEY  CLMSEX  CLMINSUR  SEATBELT  CLMAGE    LOSS\n","0        5         0     0.0       1.0       0.0    50.0  34.940\n","1        3         1     1.0       0.0       0.0    18.0   0.891\n","2       66         1     0.0       1.0       0.0     5.0   0.330\n","3       70         0     0.0       1.0       1.0    31.0   0.037\n","4       96         1     0.0       1.0       0.0    30.0   0.038"],"text/html":["\n","  <div id=\"df-0e0b8ac2-2c20-45c5-9005-6eddac96c1e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CASENUM</th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>34.940</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>0.891</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.330</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>70</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>31.0</td>\n","      <td>0.037</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>96</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.038</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e0b8ac2-2c20-45c5-9005-6eddac96c1e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0e0b8ac2-2c20-45c5-9005-6eddac96c1e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0e0b8ac2-2c20-45c5-9005-6eddac96c1e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-541fb1d8-d649-4324-a52e-a7fa0cad97f2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-541fb1d8-d649-4324-a52e-a7fa0cad97f2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-541fb1d8-d649-4324-a52e-a7fa0cad97f2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1340,\n  \"fields\": [\n    {\n      \"column\": \"CASENUM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9512,\n        \"min\": 0,\n        \"max\": 34153,\n        \"num_unique_values\": 1283,\n        \"samples\": [\n          33440,\n          33455,\n          7140\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49672527823109297,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28967139032188993,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12942519349117368,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.30445058496312,\n        \"min\": 0.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          15.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.63690317364136,\n        \"min\": 0.0,\n        \"max\": 173.604,\n        \"num_unique_values\": 916,\n        \"samples\": [\n          7.068,\n          0.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Ialb8DqtFmNY","executionInfo":{"status":"ok","timestamp":1723868220008,"user_tz":-330,"elapsed":24,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"c03fa032-d5ee-4af2-e8d8-e3a68d99ac4e"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CASENUM  ATTORNEY  CLMSEX  CLMINSUR  SEATBELT  CLMAGE   LOSS\n","1335    34100         1     0.0       1.0       0.0     NaN  0.576\n","1336    34110         0     1.0       1.0       0.0    46.0  3.705\n","1337    34113         1     1.0       1.0       0.0    39.0  0.099\n","1338    34145         0     1.0       0.0       0.0     8.0  3.177\n","1339    34153         1     1.0       1.0       0.0    30.0  0.688"],"text/html":["\n","  <div id=\"df-28a9984e-5bf9-4aa8-bc1b-57476bcc90a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CASENUM</th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1335</th>\n","      <td>34100</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.576</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>34110</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>46.0</td>\n","      <td>3.705</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>34113</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.0</td>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>1338</th>\n","      <td>34145</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>3.177</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>34153</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.688</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28a9984e-5bf9-4aa8-bc1b-57476bcc90a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28a9984e-5bf9-4aa8-bc1b-57476bcc90a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28a9984e-5bf9-4aa8-bc1b-57476bcc90a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c26694b5-e850-423d-803b-1aaaea99e959\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c26694b5-e850-423d-803b-1aaaea99e959')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c26694b5-e850-423d-803b-1aaaea99e959 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"CASENUM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23,\n        \"min\": 34100,\n        \"max\": 34153,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          34110,\n          34153,\n          34113\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.44721359549995804,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4472135954999579,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.520189667999176,\n        \"min\": 8.0,\n        \"max\": 46.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6612698456301433,\n        \"min\": 0.099,\n        \"max\": 3.705,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3.705\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["df.drop(['CASENUM'],axis=1,inplace=True)"],"metadata":{"id":"v1ZXhs6OFoKk","executionInfo":{"status":"ok","timestamp":1723868220008,"user_tz":-330,"elapsed":21,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"NwqtM0x4Fwnl","executionInfo":{"status":"ok","timestamp":1723868221320,"user_tz":-330,"elapsed":1331,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"da6891c5-4143-4904-d3b9-d9c50054d333"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ATTORNEY  CLMSEX  CLMINSUR  SEATBELT  CLMAGE    LOSS\n","0            0     0.0       1.0       0.0    50.0  34.940\n","1            1     1.0       0.0       0.0    18.0   0.891\n","2            1     0.0       1.0       0.0     5.0   0.330\n","3            0     0.0       1.0       1.0    31.0   0.037\n","4            1     0.0       1.0       0.0    30.0   0.038\n","...        ...     ...       ...       ...     ...     ...\n","1335         1     0.0       1.0       0.0     NaN   0.576\n","1336         0     1.0       1.0       0.0    46.0   3.705\n","1337         1     1.0       1.0       0.0    39.0   0.099\n","1338         0     1.0       0.0       0.0     8.0   3.177\n","1339         1     1.0       1.0       0.0    30.0   0.688\n","\n","[1340 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-71af3c1d-0d89-4c7b-9a2c-c854d221a0ce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>34.940</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>0.891</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.330</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>31.0</td>\n","      <td>0.037</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.038</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>0.576</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>46.0</td>\n","      <td>3.705</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.0</td>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>1338</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>3.177</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.688</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1340 rows Ã— 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71af3c1d-0d89-4c7b-9a2c-c854d221a0ce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-71af3c1d-0d89-4c7b-9a2c-c854d221a0ce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-71af3c1d-0d89-4c7b-9a2c-c854d221a0ce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-81260597-cc85-4f5c-b8be-9a24e01682d7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81260597-cc85-4f5c-b8be-9a24e01682d7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-81260597-cc85-4f5c-b8be-9a24e01682d7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7a9e1edf-2c76-4ca0-8ff4-adae05538fb6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7a9e1edf-2c76-4ca0-8ff4-adae05538fb6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1340,\n  \"fields\": [\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49672527823109297,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28967139032188993,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12942519349117368,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.30445058496312,\n        \"min\": 0.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          15.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.63690317364136,\n        \"min\": 0.0,\n        \"max\": 173.604,\n        \"num_unique_values\": 916,\n        \"samples\": [\n          7.068,\n          0.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YzfUwY3iFzM0","executionInfo":{"status":"ok","timestamp":1723868221320,"user_tz":-330,"elapsed":135,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"8d0f7c87-1868-4c46-b4e2-c3a9fb651423"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1340 entries, 0 to 1339\n","Data columns (total 6 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   ATTORNEY  1340 non-null   int64  \n"," 1   CLMSEX    1328 non-null   float64\n"," 2   CLMINSUR  1299 non-null   float64\n"," 3   SEATBELT  1292 non-null   float64\n"," 4   CLMAGE    1151 non-null   float64\n"," 5   LOSS      1340 non-null   float64\n","dtypes: float64(5), int64(1)\n","memory usage: 62.9 KB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"gh0KxZ-9F1zk","executionInfo":{"status":"ok","timestamp":1723868221321,"user_tz":-330,"elapsed":128,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"68f55ef3-a225-4c54-93ab-2363c158f5c9"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          ATTORNEY       CLMSEX     CLMINSUR     SEATBELT       CLMAGE  \\\n","count  1340.000000  1328.000000  1299.000000  1292.000000  1151.000000   \n","mean      0.488806     0.558735     0.907621     0.017028    28.414422   \n","std       0.500061     0.496725     0.289671     0.129425    20.304451   \n","min       0.000000     0.000000     0.000000     0.000000     0.000000   \n","25%       0.000000     0.000000     1.000000     0.000000     9.000000   \n","50%       0.000000     1.000000     1.000000     0.000000    30.000000   \n","75%       1.000000     1.000000     1.000000     0.000000    43.000000   \n","max       1.000000     1.000000     1.000000     1.000000    95.000000   \n","\n","              LOSS  \n","count  1340.000000  \n","mean      3.806307  \n","std      10.636903  \n","min       0.000000  \n","25%       0.400000  \n","50%       1.069500  \n","75%       3.781500  \n","max     173.604000  "],"text/html":["\n","  <div id=\"df-3d94ea08-d675-4eeb-bca5-29be5ebff218\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1340.000000</td>\n","      <td>1328.000000</td>\n","      <td>1299.000000</td>\n","      <td>1292.000000</td>\n","      <td>1151.000000</td>\n","      <td>1340.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.488806</td>\n","      <td>0.558735</td>\n","      <td>0.907621</td>\n","      <td>0.017028</td>\n","      <td>28.414422</td>\n","      <td>3.806307</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.500061</td>\n","      <td>0.496725</td>\n","      <td>0.289671</td>\n","      <td>0.129425</td>\n","      <td>20.304451</td>\n","      <td>10.636903</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>9.000000</td>\n","      <td>0.400000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>30.000000</td>\n","      <td>1.069500</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>43.000000</td>\n","      <td>3.781500</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>95.000000</td>\n","      <td>173.604000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d94ea08-d675-4eeb-bca5-29be5ebff218')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d94ea08-d675-4eeb-bca5-29be5ebff218 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d94ea08-d675-4eeb-bca5-29be5ebff218');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6786d60-51ca-4f84-b5af-f044716688b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6786d60-51ca-4f84-b5af-f044716688b9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6786d60-51ca-4f84-b5af-f044716688b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 473.6107657123064,\n        \"min\": 0.0,\n        \"max\": 1340.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.48880597014925375,\n          1.0,\n          0.5000613028530422\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 469.3142551004854,\n        \"min\": 0.0,\n        \"max\": 1328.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.5587349397590361,\n          1.0,\n          0.49672527823109297\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 459.0035146800529,\n        \"min\": 0.0,\n        \"max\": 1299.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.9076212471131639,\n          1.0,\n          0.28967139032188993\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 456.73320571345187,\n        \"min\": 0.0,\n        \"max\": 1292.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.017027863777089782,\n          1.0,\n          0.12942519349117368\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 396.584758235919,\n        \"min\": 0.0,\n        \"max\": 1151.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          28.414422241529106,\n          30.0,\n          1151.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 467.8226402345135,\n        \"min\": 0.0,\n        \"max\": 1340.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8063067164179105,\n          1.0695000000000001,\n          1340.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"TxMfCKgGF54k","executionInfo":{"status":"ok","timestamp":1723868221321,"user_tz":-330,"elapsed":125,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"ec7897a9-7a8d-4493-a4de-ab617c7b04d1"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ATTORNEY      0\n","CLMSEX       12\n","CLMINSUR     41\n","SEATBELT     48\n","CLMAGE      189\n","LOSS          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ATTORNEY</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CLMSEX</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>CLMINSUR</th>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>SEATBELT</th>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>CLMAGE</th>\n","      <td>189</td>\n","    </tr>\n","    <tr>\n","      <th>LOSS</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["df.fillna(1,inplace=True)"],"metadata":{"id":"fB2oS3kvGUTE","executionInfo":{"status":"ok","timestamp":1723868221321,"user_tz":-330,"elapsed":123,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["# prompt: fillna by where na is repalced by 1\n","\n","df.fillna(1, inplace=True)\n"],"metadata":{"id":"8Ip-PmO5jMKX","executionInfo":{"status":"ok","timestamp":1723868221322,"user_tz":-330,"elapsed":123,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"09d0tOOZGas0","executionInfo":{"status":"ok","timestamp":1723868221322,"user_tz":-330,"elapsed":122,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"3e78d08e-bd0b-42a2-cb26-669e6918da0a"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ATTORNEY  CLMSEX  CLMINSUR  SEATBELT  CLMAGE    LOSS\n","0            0     0.0       1.0       0.0    50.0  34.940\n","1            1     1.0       0.0       0.0    18.0   0.891\n","2            1     0.0       1.0       0.0     5.0   0.330\n","3            0     0.0       1.0       1.0    31.0   0.037\n","4            1     0.0       1.0       0.0    30.0   0.038\n","...        ...     ...       ...       ...     ...     ...\n","1335         1     0.0       1.0       0.0     1.0   0.576\n","1336         0     1.0       1.0       0.0    46.0   3.705\n","1337         1     1.0       1.0       0.0    39.0   0.099\n","1338         0     1.0       0.0       0.0     8.0   3.177\n","1339         1     1.0       1.0       0.0    30.0   0.688\n","\n","[1340 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-a40b432a-5cd0-4b51-9eef-c5e1578da13d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>34.940</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>0.891</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.330</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>31.0</td>\n","      <td>0.037</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.038</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.576</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>46.0</td>\n","      <td>3.705</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.0</td>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>1338</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>3.177</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.688</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1340 rows Ã— 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a40b432a-5cd0-4b51-9eef-c5e1578da13d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a40b432a-5cd0-4b51-9eef-c5e1578da13d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a40b432a-5cd0-4b51-9eef-c5e1578da13d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0fcc8cd1-00d6-42d7-8eb6-6a8181fc3c9e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0fcc8cd1-00d6-42d7-8eb6-6a8181fc3c9e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0fcc8cd1-00d6-42d7-8eb6-6a8181fc3c9e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ffd3f5f1-9492-4c5e-8329-e87cdee6e16c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ffd3f5f1-9492-4c5e-8329-e87cdee6e16c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1340,\n  \"fields\": [\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49624002867855127,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2856458051886457,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22259130353816872,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.099712475053643,\n        \"min\": 0.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          15.0,\n          38.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.63690317364136,\n        \"min\": 0.0,\n        \"max\": 173.604,\n        \"num_unique_values\": 916,\n        \"samples\": [\n          7.068,\n          0.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"cqVj1kQuGcRm","executionInfo":{"status":"ok","timestamp":1723868221322,"user_tz":-330,"elapsed":120,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"d35eea12-a627-4e52-af4e-3b512f850b93"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ATTORNEY    0\n","CLMSEX      0\n","CLMINSUR    0\n","SEATBELT    0\n","CLMAGE      0\n","LOSS        0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ATTORNEY</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CLMSEX</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CLMINSUR</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SEATBELT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CLMAGE</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>LOSS</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"x_wADfoSGe8U","executionInfo":{"status":"ok","timestamp":1723868221322,"user_tz":-330,"elapsed":118,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"3c54fbf1-c947-4228-e1e3-94d4d068f0c5"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ATTORNEY      int64\n","CLMSEX      float64\n","CLMINSUR    float64\n","SEATBELT    float64\n","CLMAGE      float64\n","LOSS        float64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ATTORNEY</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>CLMSEX</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>CLMINSUR</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>SEATBELT</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>CLMAGE</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>LOSS</th>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["plt.figure(figsize=(10,10))\n","sns.heatmap(df.corr(),annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":853},"id":"t_wVzdYWGww0","executionInfo":{"status":"ok","timestamp":1723868221323,"user_tz":-330,"elapsed":116,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"194be2e6-8a2f-4829-fa76-2d52d9411e49"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":55},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.cov()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"52W9mALdG3IE","executionInfo":{"status":"ok","timestamp":1723868221323,"user_tz":-330,"elapsed":109,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"5865ab9d-da24-4d17-fe7b-723ce1e3d7f6"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          ATTORNEY    CLMSEX  CLMINSUR  SEATBELT      CLMAGE        LOSS\n","ATTORNEY  0.250061  0.018999  0.010946 -0.004643   -0.288113   -1.168687\n","CLMSEX    0.018999  0.246254  0.009352  0.001951   -0.100084   -0.149971\n","CLMINSUR  0.010946  0.009352  0.081594  0.001694    0.139456    0.014101\n","SEATBELT -0.004643  0.001951  0.001694  0.049547   -0.243722    0.081273\n","CLMAGE   -0.288113 -0.100084  0.139456 -0.243722  445.197867   10.597417\n","LOSS     -1.168687 -0.149971  0.014101  0.081273   10.597417  113.143709"],"text/html":["\n","  <div id=\"df-0926f17d-c9c3-46a6-9567-aa02aa0bde92\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ATTORNEY</th>\n","      <td>0.250061</td>\n","      <td>0.018999</td>\n","      <td>0.010946</td>\n","      <td>-0.004643</td>\n","      <td>-0.288113</td>\n","      <td>-1.168687</td>\n","    </tr>\n","    <tr>\n","      <th>CLMSEX</th>\n","      <td>0.018999</td>\n","      <td>0.246254</td>\n","      <td>0.009352</td>\n","      <td>0.001951</td>\n","      <td>-0.100084</td>\n","      <td>-0.149971</td>\n","    </tr>\n","    <tr>\n","      <th>CLMINSUR</th>\n","      <td>0.010946</td>\n","      <td>0.009352</td>\n","      <td>0.081594</td>\n","      <td>0.001694</td>\n","      <td>0.139456</td>\n","      <td>0.014101</td>\n","    </tr>\n","    <tr>\n","      <th>SEATBELT</th>\n","      <td>-0.004643</td>\n","      <td>0.001951</td>\n","      <td>0.001694</td>\n","      <td>0.049547</td>\n","      <td>-0.243722</td>\n","      <td>0.081273</td>\n","    </tr>\n","    <tr>\n","      <th>CLMAGE</th>\n","      <td>-0.288113</td>\n","      <td>-0.100084</td>\n","      <td>0.139456</td>\n","      <td>-0.243722</td>\n","      <td>445.197867</td>\n","      <td>10.597417</td>\n","    </tr>\n","    <tr>\n","      <th>LOSS</th>\n","      <td>-1.168687</td>\n","      <td>-0.149971</td>\n","      <td>0.014101</td>\n","      <td>0.081273</td>\n","      <td>10.597417</td>\n","      <td>113.143709</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0926f17d-c9c3-46a6-9567-aa02aa0bde92')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0926f17d-c9c3-46a6-9567-aa02aa0bde92 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0926f17d-c9c3-46a6-9567-aa02aa0bde92');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-de77cf23-2f03-45e1-b5e4-23264613ff74\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de77cf23-2f03-45e1-b5e4-23264613ff74')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-de77cf23-2f03-45e1-b5e4-23264613ff74 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5058141369602929,\n        \"min\": -1.1686870046704492,\n        \"max\": 0.25006130661108295,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.25006130661108295,\n          0.018999476107141717,\n          -1.1686870046704492\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13673650050537728,\n        \"min\": -0.14997107108222887,\n        \"max\": 0.24625416606288977,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.018999476107141717,\n          0.24625416606288977,\n          -0.14997107108222887\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05566693465814809,\n        \"min\": 0.001694291797175432,\n        \"max\": 0.13945582022672298,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.010946016742278191,\n          0.009352044854145968,\n          0.01410067660205321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11517506999197778,\n        \"min\": -0.24372164569237456,\n        \"max\": 0.08127298719249154,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          -0.004642582457391927,\n          0.0019506648980637971,\n          0.08127298719249154\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 180.97707465068808,\n        \"min\": -0.2881132054440273,\n        \"max\": 445.1978665299343,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          -0.2881132054440273,\n          -0.10008359992420253,\n          10.597416631926254\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45.63645261711491,\n        \"min\": -1.1686870046704492,\n        \"max\": 113.14370912542164,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          -1.1686870046704492,\n          -0.14997107108222887,\n          113.14370912542164\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"sWG-rc9NG8mA","executionInfo":{"status":"ok","timestamp":1723868221323,"user_tz":-330,"elapsed":106,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"e39324b7-91a2-45bb-f1ba-c2ae26978364"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          ATTORNEY    CLMSEX  CLMINSUR  SEATBELT    CLMAGE      LOSS\n","ATTORNEY  1.000000  0.076564  0.076631 -0.041709 -0.027306 -0.219715\n","CLMSEX    0.076564  1.000000  0.065976  0.017660 -0.009559 -0.028412\n","CLMINSUR  0.076631  0.065976  1.000000  0.026647  0.023138  0.004641\n","SEATBELT -0.041709  0.017660  0.026647  1.000000 -0.051893  0.034326\n","CLMAGE   -0.027306 -0.009559  0.023138 -0.051893  1.000000  0.047218\n","LOSS     -0.219715 -0.028412  0.004641  0.034326  0.047218  1.000000"],"text/html":["\n","  <div id=\"df-3e451695-8cb2-4478-b9d2-a3c36ff3d04c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ATTORNEY</th>\n","      <td>1.000000</td>\n","      <td>0.076564</td>\n","      <td>0.076631</td>\n","      <td>-0.041709</td>\n","      <td>-0.027306</td>\n","      <td>-0.219715</td>\n","    </tr>\n","    <tr>\n","      <th>CLMSEX</th>\n","      <td>0.076564</td>\n","      <td>1.000000</td>\n","      <td>0.065976</td>\n","      <td>0.017660</td>\n","      <td>-0.009559</td>\n","      <td>-0.028412</td>\n","    </tr>\n","    <tr>\n","      <th>CLMINSUR</th>\n","      <td>0.076631</td>\n","      <td>0.065976</td>\n","      <td>1.000000</td>\n","      <td>0.026647</td>\n","      <td>0.023138</td>\n","      <td>0.004641</td>\n","    </tr>\n","    <tr>\n","      <th>SEATBELT</th>\n","      <td>-0.041709</td>\n","      <td>0.017660</td>\n","      <td>0.026647</td>\n","      <td>1.000000</td>\n","      <td>-0.051893</td>\n","      <td>0.034326</td>\n","    </tr>\n","    <tr>\n","      <th>CLMAGE</th>\n","      <td>-0.027306</td>\n","      <td>-0.009559</td>\n","      <td>0.023138</td>\n","      <td>-0.051893</td>\n","      <td>1.000000</td>\n","      <td>0.047218</td>\n","    </tr>\n","    <tr>\n","      <th>LOSS</th>\n","      <td>-0.219715</td>\n","      <td>-0.028412</td>\n","      <td>0.004641</td>\n","      <td>0.034326</td>\n","      <td>0.047218</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e451695-8cb2-4478-b9d2-a3c36ff3d04c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e451695-8cb2-4478-b9d2-a3c36ff3d04c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e451695-8cb2-4478-b9d2-a3c36ff3d04c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-38f1effc-c7bd-4283-a642-428619a6978f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-38f1effc-c7bd-4283-a642-428619a6978f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-38f1effc-c7bd-4283-a642-428619a6978f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4331153097150559,\n        \"min\": -0.21971502710233937,\n        \"max\": 1.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1.0,\n          0.07656434729424952,\n          -0.21971502710233937\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40038119901599073,\n        \"min\": -0.028411914167331208,\n        \"max\": 1.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.07656434729424952,\n          1.0,\n          -0.028411914167331208\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3931099697280494,\n        \"min\": 0.004640843204415069,\n        \"max\": 1.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.07663109111972205,\n          0.06597614517540745,\n          0.004640843204415069\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.41107624535485426,\n        \"min\": -0.05189307090577963,\n        \"max\": 1.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          -0.04170884707789274,\n          0.017659674030142954,\n          0.03432597041445779\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4112676949102733,\n        \"min\": -0.05189307090577963,\n        \"max\": 1.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          -0.027306332803546104,\n          -0.009558606596045531,\n          0.047218073685990736\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4325400403821447,\n        \"min\": -0.21971502710233937,\n        \"max\": 1.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          -0.21971502710233937,\n          -0.028411914167331208,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["plt.figure(figsize=(10,10))\n","sns.pairplot(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"QXLKfIJwG_gX","executionInfo":{"status":"ok","timestamp":1723868236000,"user_tz":-330,"elapsed":14781,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"dd214040-9c1b-4807-a0ea-cae169c6b879"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x79bde7cdd5a0>"]},"metadata":{},"execution_count":58},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1500 with 42 Axes>"],"image/png":"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ExanNxSHQaNg0YCoE7HkK8dXImHJHte6kqtEJA5duhZudsDtC8Dh9cPp8SNHJYdU0rYAPYKARAooZVL4AwHIJVK4/AFYnT7o1XLk5ygTUgzvyOLwoNHmQavLixyVHEqZFBanBzkqBUw6JQve1KvwGccu4gU/kTAx5IkYYiASO7HkSUGehgVwIgFiyVexxEEkZhzXiKg7CkQ2thq00YreOWmJhSjZ2DKFiIiIiIiIiIiIiLICC+JERERERERERERElBVYECciIiIiIiIiIiKirMCCOBERERERERERERFlBRbEiYiIiIiIiIiIiCgrsCBORERERERERERERFmBBXEiIiIiIiIiIiIiygosiBMRERERERERERFRVmBBnIiIiIiIiIiIiIiyAgviRERERERERERERJQVWBAnIiIiIiIiIiIioqwg6oL4ihUrcMMNNyA3Nxd9+/bFlClTcPTo0bD3uFwuPPTQQzAajdDpdKiqqsLZs2fTFDERERERERERERERiZWoC+L/+Mc/8NBDD+HDDz/Eu+++C6/Xi2984xuw2+2h9zz88MN444038Kc//Qn/+Mc/cOrUKXzrW99KY9REREREREREREREJEbydAcQz9tvvx32++9+9zv07dsXH3/8McaMGQOLxYL169fjlVdewW233QYA2LhxI6699lp8+OGHuOmmm9IRNhERERERERERERGJkKgL4p1ZLBYAQJ8+fQAAH3/8MbxeL8aPHx96z+DBg1FUVIQPPvggoQXxL5sdaHX5YHV6YdAooFPLcUW+NmH7J+oNxJAnYoiBSOzEkidiiYNIzMSSJ2KJg0jMTrU4YXF6Q3mi1yhQkKdJd1hEJFKnWpywebxQSKRw+QJodXmhVyugVcrg8PrhcPuQr1XC6w/C7vFBr1HAlKOEQatMd+iwODxotHlgdXnTFpcYYqDMlTEF8UAggJ/85CcoLy/HsGHDAABnzpyBUqlEXl5e2Hv79euHM2fOxNyX2+2G2+0O/W61WuN+9vEmOx577QBq65tCr1WYjXh6aikGGnN6cDREvU8y8oS5SpR4ycoT5itR4jFfiTKHGK6FiSh9ejK2PvvWYcwbfw0WbTsYce6YXXElggjiuXc/C9s2psSElVXD0/pl26kWJxZs2Y/dxxrTFpcYYqDMJuoe4h099NBDOHjwIF599dVL3teKFStgMBhCP4WF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d+Po0aO47777BN87evRo+Hw+/Pvf/475nkcffRQWiyX0c/LkyZjvtbq8cT+vVWA7EfVcd3KViIQlc0xjvhIllljyldfCROnDsTXz8JyZvZivRJklI3qIr1+/Htdffz1GjBgh+N5PPvkEUqkUffv2jfkelUoFlUrVpc/WqxVxt+cKbCeinutOrhKRsGSOacxXosQSS77yWpgofTi2Zh6eM7MX85Uos6R1hrjNZsMnn3yCTz75BADQ0NCATz75BCdOnAi9x2q14k9/+lPU2eEffPABXnjhBfzrX//CF198gU2bNuHhhx/Gvffei/z8/ITEaNIpMabEFHXbmBITTDquFE1ERJmBYxpR5hBLvoolDiKiTMBzJhFRZkhrQXzv3r0oKytDWVkZgLZ+4GVlZViyZEnoPa+++iqCwSCqq6sj/l6lUuHVV1/F1772NQwdOhRPP/00Hn74Yfz6179OWIwGrRIrq4ZHDGpjSkxYVTUcBi0HNCIiygwc04gyh1jyVSxxEBFlAp4ziYgygyQYDAbTHUS6Wa1WGAwGWCwW6PX6qO+xODxotHnQ6vIiV62ASafkYEaUYl3JVSISlooxjflKlBhiyVdeCxOlH8fWzMFzJjFficQtI3qIi4FBywGMiIh6B45pRJlDLPkqljiIiDIBz5lEROKW1pYpRERERERERERERESpwoI4EREREREREREREWUFFsSJiIiIiIiIiIiIKCuwIE5EREREREREREREWYEFcSIiIiIiIiIiIiLKCiyIExEREREREREREVFWYEGciIiIiIiIiIiIiLICC+JERERERERERERElBVYECciIiIiIiIiIiKirMCCOBERERERERERERFlBRbEiYiIiIiIiIiIiCgrsCBORERERERERERERFmBBXEiIiIiIiIiIiIiygosiBMRERERERERERFRVmBBnIiIiIiIiIiIiIiyAgviRERERERERERERJQVWBAnIiIiIiIiIiIioqzAgjgRERERERERERERZYW0FsR37dqFyZMno6CgABKJBFu3bg3bPmPGDEgkkrCf22+/Pew9Fy5cwLRp06DX65GXl4fZs2fDZrOl8CiIiIiIiIiIiIiIKBOktSBut9sxYsQIrFu3LuZ7br/9dpw+fTr0s3nz5rDt06ZNw6FDh/Duu+9i27Zt2LVrF370ox8lO3QiIiIiIiIiIiIiyjDydH74xIkTMXHixLjvUalU6N+/f9Rthw8fxttvv42PPvoIo0aNAgCsWbMG3/zmN/Hzn/8cBQUFCY+ZiIiIiIiIiIiIiDJTWgviXfHee++hb9++yM/Px2233Ybly5fDaDQCAD744APk5eWFiuEAMH78eEilUuzZswdTp06Nuk+32w232x363Wq1JvcgiKhHmKtEmYP5SpQ5mK9EmYG5SpQ5mK9EmUXUi2refvvt+P3vf4/t27dj1apV+Mc//oGJEyfC7/cDAM6cOYO+ffuG/Y1cLkefPn1w5syZmPtdsWIFDAZD6KewsDCpx0FEPcNcJcoczFeizMF8JcoMzFWizMF8JcoskmAwGEx3EAAgkUjw2muvYcqUKTHf88UXX+Cqq67C3//+d4wbNw7PPPMMXn75ZRw9ejTsfX379sVTTz2FBx54IOp+on1zV1hYCIvFAr1en5DjIaJLx1wlyhzMV6LMwXwlygzMVaLMwXwlyiyib5nS0ZVXXgmTyYT6+nqMGzcO/fv3x7lz58Le4/P5cOHChZh9x4G2vuQqlSrZ4RLRJWKuEmUO5itR5mC+EmUG5ipR5mC+EmUWUbdM6ezLL79EU1MTBgwYAAC4+eab0dLSgo8//jj0nh07diAQCGD06NHpCpOIiIiIiIiIiIiIRCitM8RtNhvq6+tDvzc0NOCTTz5Bnz590KdPHzz11FOoqqpC//798fnnn+ORRx6B2WzGhAkTAADXXnstbr/9dvzwhz/ESy+9BK/Xizlz5uDuu+9GQUFBug6LiIiIiIiIiIiIiEQorTPE9+7di7KyMpSVlQEA5s+fj7KyMixZsgQymQz79+/HnXfeiauvvhqzZ8/G9ddfj927d4c9hrJp0yYMHjwY48aNwze/+U1UVFTg17/+dboOiYiIiIiIiIiIiIhEKq0zxMeOHYt4a3q+8847gvvo06cPXnnllUSGRURERERERERERES9UEb1ECciIiIiIiIiIiIi6ikWxImIiIiIiIiIiIgoK7AgTkRERERERERERERZgQVxIiIiIiIiIiIiIsoKLIgTERERERERERERUVZgQZyIiIiIiIiIiIiIsgIL4kRERERERERERESUFVgQJyIiIiIiIiIiIqKswII4EREREREREREREWUFFsSJiIiIiIiIiIiIKCuwIE5EREREREREREREWYEFcSIiIiIiIiIiIiLKCiyIExEREREREREREVFWYEGciIiIiIiIiIiIiLICC+JERERERERERERElBVYECciIiIiIiIiIiKirMCCOBERERERERERERFlBRbEiYiIiIiIiIiIiCgrpLUgvmvXLkyePBkFBQWQSCTYunVraJvX68WCBQtQWlqKnJwcFBQU4Ac/+AFOnToVto9BgwZBIpGE/axcuTLFR0JEREREREREREREYpfWgrjdbseIESOwbt26iG0OhwP79u3D4sWLsW/fPvzlL3/B0aNHceedd0a8d+nSpTh9+nToZ+7cuakIn4iIiIiIiIiIiIgyiDydHz5x4kRMnDgx6jaDwYB333037LW1a9fixhtvxIkTJ1BUVBR6PTc3F/37909qrERERERERERERESU2TKqh7jFYoFEIkFeXl7Y6ytXroTRaERZWRl+9rOfwefzpSdAIiIiIiIiIiIiIhKttM4Q7w6Xy4UFCxaguroaer0+9Pq8efMwcuRI9OnTB++//z4effRRnD59Gs8//3zMfbndbrjd7tDvVqs1qbETUc8wV4kyB/OVKHMwX4kyA3OVKHMwX4kyS0bMEPd6vfjud7+LYDCIX/7yl2Hb5s+fj7Fjx2L48OG4//778dxzz2HNmjVhJ6LOVqxYAYPBEPopLCxM9iEQUQ8wV4kyB/OVKHMwX4kyA3OVKHMwX4kyiyQYDAbTHQQASCQSvPbaa5gyZUrY6+3F8C+++AI7duyA0WiMu59Dhw5h2LBhOHLkCK655pqo74n2zV1hYSEsFkvY7HMiSi/mKlHmYL4SZQ7mK1FmYK4SZQ7mK1FmEXXLlPZi+LFjx7Bz507BYjgAfPLJJ5BKpejbt2/M96hUKqhUqkSGSkRJwFwlyhzMV6LMwXwlygzMVaLMwXwlyixpLYjbbDbU19eHfm9oaMAnn3yCPn36YMCAAfj2t7+Nffv2Ydu2bfD7/Thz5gwAoE+fPlAqlfjggw+wZ88e3HrrrcjNzcUHH3yAhx9+GPfeey/y8/PTdVhEREREREREREREJEJpLYjv3bsXt956a+j3+fPnAwCmT5+OJ598En/9618BANddd13Y3+3cuRNjx46FSqXCq6++iieffBJutxvFxcV4+OGHQ/shIiIiIiIiIiIiImqX1oL42LFjEa+FuVB785EjR+LDDz9MdFhERERERERERERE1AtJ0x0AERER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mkgXpVlipR5A7NQlVuoBSKMuUihDsMRKXWKlHkDs1EUq9ZBKOYIhVuoSK/UAYqcuUqmHVMrRXLFSDyB26hIr9QCkURcplCHYYrFOQGzWKxbrFEot5fViPWNPtNeVi2oSERERERERERERUYvAEeJERERERERERERE1CIwIU5ERERERERERERELQIT4kRERERERERERETUIjAhTkREREREREREREQtQotOiK9evRqdO3eGVqvFoEGDsH//fp/7v/vuu+jRowe0Wi369u2Ljz76yGW7EAJPPvkk2rdvj7i4OAwfPhwnTpwIZRWcGlOXv//978jLy0NqaipSU1MxfPhwt/2nTJkCmUzm8jdy5MhQV6NR9Vi3bp1bGbVarcs+0fKeXHfddW51kclkGD16tHOfSLwnu3btwpgxY9ChQwfIZDJs2rTJ73N27tyJK6+8EhqNBnq9HuvWrXPbp7Gx15TnSDVeYyVWAcYr49U7xivjNVQYq4xVb2IlXmMlVgHGa7DjtTFCffxQWr58OQYMGIDExES0adMGt956K44fP+6yj6fPy/333x+hEvu3ePFit/L26NHDub2mpgYzZ85EWloaEhISMG7cOJw7dy6CJfavc+fOHmN25syZAKLvPYqUaI5VT2Lxs+7grz0IpL29cOEC7r77biQlJSElJQXTp09HVVVVGGvhn796BtIWR0M9AQCihXrrrbeEWq0Wa9euFUeOHBEzZswQKSkp4ty5cx7337t3r1AoFOK5554TR48eFQsWLBAqlUocOnTIuc+KFStEcnKy2LRpk/j222/FLbfcIjIzM4XJZJJUXe666y6xevVqUVBQII4dOyamTJkikpOTxc8//+zcZ/LkyWLkyJHizJkzzr8LFy5Iqh75+fkiKSnJpYxnz5512Sda3pPS0lKXehw+fFgoFAqRn5/v3CcS78lHH30knnjiCfGvf/1LABAbN270uf8PP/wgdDqdeOSRR8TRo0fFypUrhUKhEFu2bHHu09jXpinPkWq8xkqsNqUujFfGK+OV8RruejBWW0asNqUuUo3XWInVptSF8eo7Xhsj1McPtREjRoj8/Hxx+PBh8c0334ibbrpJdOzYUVRVVTn3ufbaa8WMGTNcPgsGgyGCpfZt0aJFonfv3i7l/eWXX5zb77//fpGRkSG2bdsmvvrqKzF48GBxzTXXRLDE/p0/f96l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IpY+674E0t4OGTIE5eXlOHDggHOf7du3w263O38wikYN2+KoqmekV/WMlLfeektoNBqxbt06cfToUXHfffeJlJQUcfbsWSGEEPfcc494/PHHnfvv3btXKJVK8fzzz4tjx46JRYsWCZVKJQ4dOuTcZ8WKFSIlJUW8//774uDBg2Ls2LEiMzNTmEwmSdVlxYoVQq1Wi/fee0+cOXPG+VdZWSmEEKKyslI8+uij4vPPPxdFRUVi69at4sorrxRZWVmipqZGMvV46qmnxH/+8x9x8uRJceDAAXHnnXcKrVYrjhw54lLXaHhPHHJzc8WECRPcHo/Ue1JZWSkKCgpEQUGBACD+9Kc/iYKCAnHq1CkhhBCPP/64uOeee5z7//DDD0Kn04nHHntMHDt2TKxevVooFAqxZcsW5z7+XhtPYiVeYyVWm1IXxivjlfHKeA13PRwYq57FSqw2pS5SjddYidWm1MWB8dp8oT5+qD3wwAMiOTlZ7Ny50yU+jUajEEKIwsJCsWTJEvHVV1+JoqIi8f7774suXbqIoUOHRrjk3v3ud78TO3fuFEVFRWLv3r1i+PDhIj09XZw/f14IIcT9998vOnbsKLZv3y6++uorMWTIEDFkyJAIl9o/m80mOnbsKObOnevyeDS+R5EQ7bHqSax+1oXw3x4E0t6OHDlSZGdni3379ok9e/aIrKwsMXHixEhVySNf9Qy0LY6GegohRItNiAshxMqVK0XHjh2FWq0WAwcOFF988YVz27XXXismT57ssv8777wjunXrJtRqtejdu7f48MMPXbbb7XaxcOFC0bZtW6HRaMQNN9wgjh8/Ho6qNKounTp1EgDc/hYtWiSEEMJoNIpf/epXonXr1kKlUolOnTqJGTNmhOWLuTH1eOihh5z7tm3bVtx0003i66+/djletLwnQgjx3XffCQDik08+cTtWpN6THTt2ePysOMo+efJkce2117o954orrhBqtVp06dJF5Ofnux3X12vjTazEa6zEamPrwnhlvDowXhmv4aqHEIxVf2IlVoWInXiNlVhtbF2EYLwGU6iPH0qeXm8AztexuLhYDB06VLRq1UpoNBqh1+vFY489JgwGQ2QL7sOECRNE+/bthVqtFpdddpmYMGGCKCwsdG43mUzit7/9rUhNTRU6nU7cdttt4syZMxEscWD+85//CABu3ynR+B5FSjTHqiex+lkXwn97EEh7W1paKiZOnCgSEhJEUlKSmDp1qvPHeKnwVc9A2+JoqKcQQsiEEKKZg8yJiIiIiIiIiIiIiCSvRc4hTkREREREREREREQtDxPiRERERERERERERNQiMCFORERERERERERERC0CE+JERERERERERERE1CIwIU5ERERERERERERELQIT4kRERERERERERETUIjAhTkREREREREREREQtAhPiRERERERERERERNQiMCFOTfb5559DoVBg9OjRAIApU6ZAJpN5/evcubPP7TKZDD/++CMA4MKFC3jooYfQqVMnqNVqdOjQAdOmTUNxcbFLGeqfU6VSITMzE7///e9RU1Pjsp9MJoNWq8WpU6dcHr/11lsxZcoUj8er/zdy5EiUlJSgXbt2WLZsmdtr8X//938YPHgwbDZbEF5ZovA7e/YsZs+ejS5dukCj0SAjIwNjxozBtm3bAACdO3fGn//8Z4/P/fHHHyGTyaBQKPC///3PZduZM2egVCpd4hsANm7ciMGDByM5ORmJiYno3bs3HnroIef2devWeYxFrVYLALDZbLjmmmtw++23u5zPYDAgIyMDTzzxRPNfFKIICWc8Ovb/5ptvXP7dpk0bVFZWujz/iiuuwOLFi53/Lioqwl133YUOHTpAq9Xi8ssvx9ixY/Hdd995PHZ91113nUvM1+8j6HQ69O3bF//4xz8Cf9GIIuiXX37BAw88gI4dO0Kj0aBdu3YYMWIE9u7dCwBe+8ArVqxwO9aIESOgUCjw5ZdfArgUR77+1q1bh507d7o8FhcXh969e+Nvf/uby/F99XUdGn7HeGuTPfXhiaJRuPvBDg3jvaGCggJMmDAB7du3h0ajQadOnXDzzTfjgw8+gBDC5fye/r744oumvyhEUW7KlCm49dZbPW4zmUxYtGgRunXrBo1Gg/T0dIwfPx5Hjhxx2c9oNGLevHno2rUrtFotWrdujWuvvRbvv/++cx9//WGSLibEqcnWrFmD2bNnY9euXTh9+jT+8pe/4MyZM84/AMjPz3f+e/fu3S7bhwwZghkzZrg8lpGRgQsXLmDw4MHYunUrXnnlFRQWFuKtt95CYWEhBgwYgB9++MGlHCNHjsSZM2fwww8/4IUXXsBf//pXLFq0yK28MpkMTz75pN96OY5X/2/9+vVIT0/H3/72Nzz11FM4dOiQc/93330XmzdvxquvvgqFQtHMV5Uo/H788UdcddVV2L59O/7whz/g0KFD2LJlC4YNG4aZM2cGfJzLLrsM//znP10ee/XVV3HZZZe5PLZt2zZMmDAB48aNw/79+3HgwAE888wzsFqtLvslJSW5xaLjRy2FQoF169Zhy5YteOONN5zPmT17Nlq1auXxO4AoGoQ7Hr2prKzE888/73W71WrFjTfeCIPBgH/96184fvw43n77bfTt2xfl5eUBl7O+JUuW4MyZMzh8+DAmTZqEGTNm4OOPP27SsYjCady4cSgoKMCrr76K77//Hv/+979x3XXXobS01LmP4/Nd/2/27NkuxykuLsZnn32GWbNmYe3atQCAjIwMl+f87ne/Q+/evV0emzBhgvMYx48fx5kzZ3D06FH85je/wQMPPOBM6jl46+t6M2HChID68ETRKFLtrqd4r+/999/H4MGDUVVVhVdffRXHjh3Dli1bcNttt2HBggUwGAwu+2/dutUtrq+66qqAy0/UUpjNZgwfPhxr167F008/je+//x4fffQRamtrMWjQIJcfku6//37861//wsqVK/Hdd99hy5YtuOOOO5zteyj6wxRGgqgJKisrRUJCgvjuu+/EhAkTxDPPPOO2DwCxceNGr8e49tprxYMPPuj2+P333y/i4+PFmTNnXB43Go3isssuEyNHjnQ+NnnyZDF27FiX/W6//XaRnZ3tVpZHH31UyOVycejQIefjY8eOFZMnT/Z5vIamTJkisrOzhcViEefPnxetW7cWf/nLX3w+h0jKRo0aJS677DJRVVXltq2srEwIIUSnTp3ECy+84PH5RUVFAoBYsGCByMrKctnWrVs3sXDhQgFAFBUVCSGEePDBB8V1113ns0z5+fkiOTnZb9n/8pe/iNTUVHH69GmxadMmoVKpxDfffOP3eURSFe54dOxfUFDg8u/HHntMJCQkiHPnzjmf379/f7Fo0SIhhBAFBQUCgPjxxx+91qXhsetr2AfwVKdWrVqJhx9+2OvxiaSgrKxMABA7d+70uo+vmK1v8eLF4s477xTHjh0TycnJwmg0uu2zaNEi0b9/f7fHd+zYIQA4vyccunbtKp577jnnvwPp6/orr7c+PFE0Cne76+Ar3quqqkRaWpq47bbbvJbbbre7nN9TW0vUknlr71asWCFkMpnbNaPNZhNXX3216NWrlzO+kpOTxbp167yeI5D+MEkXR4hTk7zzzjvo0aMHunfvjkmTJmHt2rXO27aaw26346233sLdd9+Ndu3auWyLi4vDb3/7W/znP//BhQsXPD7/8OHD+Oyzz6BWq9225eTk4Oabb8bjjz/erDL+5S9/QWlpKZYuXYrf/va36NOnj9sIH6JoceHCBWzZsgUzZ85EfHy82/aUlJSAj3XLLbegrKwMe/bsAQDs2bMHZWVlGDNmjMt+7dq1w5EjR3D48OFmlR2oGxHev39/3HPPPbjvvvvw5JNPon///s0+LlEkRCIevZk4cSL0ej2WLFnicXvr1q0hl8vx3nvvBX26MLvdjg0bNqCsrMxje04kJQkJCUhISMCmTZtgNpubfBwhBPLz8zFp0iT06NEDer0e7733XrOOt2XLFhQXF2PQoEFNPg5RLItUu+sv3j/55BOUlpbi97//vdfzyWSygMtGRJe8+eabuPHGG92uGeVyOR5++GEcPXoU3377LYC669aPPvrIbRpBh1D2hyn0mBCnJlmzZg0mTZoEoO62S4PBgE8//bTZx/3ll19QXl6Onj17etzes2dPCCFQWFjofGzz5s1ISEiAVqtF3759cf78eTz22GMen798+XJs2bIFu3fv9loGx/Hq/9WfNzwpKQn5+flYtmwZPvnkE+Tn57NDQlGrsLAQQgj06NGj2cdSqVTOH8gAYO3atZg0aRJUKpXLfrNnz8aAAQPQt29fdO7cGXfeeSfWrl3rlkgwGAxusThq1CiXfWQyGV5++WVs27YNbdu2bfYPXkSRFIl49MYxv/Hf/vY3nDx50m37ZZddhhdffBFPPvkkUlNTcf3112Pp0qVu05o1xty5c5GQkACNRoM77rgDqampuPfee5t8PKJwUCqVWLduHV599VWkpKQgJycH8+fPx8GDB132c3y+6//V749u3boVRqMRI0aMAABMmjQJa9asaXR5Lr/8ciQkJECtVmP06NFYtGgRhg4d6rKPv74uUUsRqXbXX7x///33AIDu3bs7H/vyyy9dYnbz5s0ux7zmmmvc4pqI3H3//fc+802OfQDgb3/7Gz777DOkpaVhwIABePjhh53rgwCh6Q9T+DAhTo12/Phx7N+/HxMnTgRQdyEwYcKEJnXavWnMaPNhw4bhm2++wb59+zB58mRMnToV48aN87hvr1698Otf/9pn0sxxvPp/999/v8s+119/PQYPHox77rkHnTp1CrisRFITjDs76ps2bRreffddnD17Fu+++y6mTZvmtk98fDw+/PBDFBYWYsGCBUhISMDvfvc7DBw4EEaj0blfYmKiWyx6WmRv7dq10Ol0KCoqws8//xzU+hCFUyTi0ZcRI0YgNzcXCxcu9Lh95syZOHv2LN544w0MGTIE7777Lnr37o3//ve/TSrvY489hm+++Qbbt2/HoEGD8MILL0Cv1zfpWEThNG7cOJw+fRr//ve/MXLkSOzcuRNXXnkl1q1b59zH8fmu/3f11Vc7t69duxYTJkyAUqkEUHeXxt69ez3+IOXL7t27XdrMZcuW4eWXX3bZJ5C+LlFLEKl2tynx3q9fP2e8VldXo7a21mX722+/7RbXRORZoLE/dOhQ/PDDD9i2bRvuuOMOHDlyBHl5eVi6dKlzn2D3hyl8mBCnRluzZg1qa2vRoUMHKJVKKJVKvPzyy9iwYYPb4h6N1bp1a6SkpODYsWMetx87dgwymczlAjk+Ph56vR79+/fH2rVrsW/fPp/J+aeeegpff/01Nm3a5HG743j1/1q1auW2n6PuRNEsKysLMpksaKtg9+3bFz169MDEiRPRs2dP9OnTx+u+Xbt2xb333ot//OMf+Prrr3H06FG8/fbbzu1yudwtFhsuTPTZZ5/hhRdewObNmzFw4EBMnz496Bc3ROESyXj0ZsWKFXj77bdRUFDgcXtiYiLGjBmDZ555Bt9++y3y8vLw9NNPA6i7owqAx75BeXk5kpOTXR5LT0+HXq9HXl4e3n33XcyZMwdHjx5tdJmJIkGr1eLGG2/EwoUL8dlnn2HKlCkuCzw7Pt/1/+Li4gDUTduwceNGvPTSS87+5WWXXYba2lqPi+35kpmZCb1ej969e2Pq1Km455578Mwzz7jsE2hflyjWRaLdDSTes7KyANQNRHPQaDTOePUkIyPDLa6JyF23bt185psc+zioVCrk5eVh7ty5+OSTT7BkyRIsXboUFovFuY+v/jBJFxPi1Ci1tbX45z//iT/+8Y8uvz5/++236NChg88V6gMhl8vxf//3f3jzzTdx9uxZl20mkwkvvfQSRowY4bXTLpfLMX/+fCxYsAAmk8njPhkZGZg1axbmz5/PeZ6oxWvVqhVGjBiB1atXo7q62m17U1bHnjZtGnbu3Nmo0aidO3eGTqfzWAZvjEYjpkyZggceeADDhg3DmjVrsH//frzyyiuNLjORFEglHusbOHAgbr/99oCmI5LJZOjRo4ez7K1atUJ6ejoOHDjgsl9FRQUKCwtdLjYaysjIwIQJEzBv3rwmlZso0nr16hVwm/bGG2/g8ssvx7fffuvSv/7jH/+IdevWNau/qlAovPaJiVq6SLS7gcT7r371K7Rq1QrPPvtso89PRL7deeed2Lp1q3OecAe73Y4XXngBvXr18rkmVa9evVBbW4uamhqP2xv2h0m6OLyVGmXz5s0oKyvD9OnT3UZ2jRs3DmvWrGn2LZfLli3Dtm3bcOONN+K5555Dnz59UFRUhAULFsBqtWL16tU+nz9+/Hg89thjWL16NR599FGP+8ybNw9///vfUVRUhAkTJrhsM5vNbsl4pVKJ9PT0ZtWLSKpWr16NnJwcDBw4EEuWLEG/fv1QW1uL//73v3j55Zedv5T/73//c7v90tOUQTNmzMD48eO9LkS0ePFiGI1G3HTTTejUqRPKy8vx4osvwmq14sYbb3TuJ4Rwi0UAaNOmDeRyOebNmwchBFasWAGgLqn+/PPP49FHH8WoUaPQuXPnpr0gRBEU7ngMxDPPPIPevXu73BX1zTffYNGiRbjnnnvQq1cvqNVqfPrpp1i7di3mzp3r3O+RRx7BsmXL0LZtWwwePNi5KHXr1q1x++23+zzvgw8+iD59+uCrr75ymVqCSEpKS0sxfvx4TJs2Df369UNiYiK++uorPPfccxg7dqxzv8rKSrc2TafTISkpCWvWrMEdd9zhNpo0IyMD8+bNw5YtWzB69OiAynP+/HnU1NTAbDZj//79eO2113DHHXe47BNIX9fbd0xqampA5SCKFuFudwON93/84x+YMGECRo8ejTlz5iArKwtVVVXYsmULgLofu+orLS11i+uUlBRotdrGvBxEMcVgMLjF7aRJk/D+++9jzJgx+OMf/4hBgwbh3LlzWLZsGY4dO4atW7c614i77rrrMHHiRFx99dVIS0vD0aNHMX/+fAwbNgxJSUkB94dJogRRI9x8883ipptu8rht3759AoD49ttvhRBCABAbN270eqxrr71WPPjggx63/fLLL2L27NkiIyNDqFQq0bZtWzFlyhRx6tQpl/0mT54sxo4d6/b85cuXi9atW4uqqiqvZVm2bJkAICZPnuxyPABuf927d29U+YmizenTp8XMmTNFp06dhFqtFpdddpm45ZZbxI4dO4QQQnTq1MljbLz22muiqKhIABAFBQUej11QUCAAiKKiIiGEENu3bxfjxo0TGRkZQq1Wi7Zt24qRI0eK3bt3O5+Tn5/v8XwAxJkzZ8TOnTuFQqFweY7Dr371K3H99dcLu90e7JeJKCzCGY8N9/f2/Pvuu08AEIsWLRJC1LXTc+bMEX369BEJCQkiMTFR9O3bVzz//PPCZrM5n1dbWytefPFF0bdvX6HT6cTll18uJkyY4Dy/Q6dOncQLL7zgVt4RI0aIUaNGNfIVJAqfmpoa8fjjj4srr7xSJCcnC51OJ7p37y4WLFggjEajEMJ7zP7mN78RX331lQAg9u/f7/H4o0aNErfddpvz34sWLRL9+/d322/Hjh0ux1YqlSIzM1M8+uijzv6wEIH1dX19xwjBPjDFnnC1u42N9y+//FLccccdok2bNkKpVIq0tDQxYsQI8dZbbzn7uY7ze/pbv359UF8nomjirb2bPn26qK6uFk888YTQ6/VCpVKJVq1aiXHjxolDhw65HGPZsmViyJAholWrVkKr1YouXbqIOXPmiJKSEiFE4P1hkiaZEJxslYiIiIiIiIiIiIhiH+cQJyIiIiIiIiIiIqIWgQlxIiIiIiIiIiIiImoRmBAnIiIiIiIiIiIiohaBCXEiIiIiIiIiIiIiahGYECciIiIiIiIiIiKiFoEJcSIiIiIiIiIiIiJqEZgQJyIiIiIiIiIiIqIWgQlxIiIiIiIiIiIiImoRmBAnIiIiIiIiIiIiohaBCXEiIiIiIiIiIiIiahGYECciIiIiIiIiIiKiFoEJcSIiIiIiIiIiIiJqEf4f7ColTPfS/eQAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","df['CLMAGE'].value_counts().plot(kind='bar')\n","plt.xlabel('Claimant Age')\n","plt.ylabel('Number of Claimants')\n","plt.title('Number of Claimants per Age')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":581},"id":"oqZqE_GDH0do","executionInfo":{"status":"ok","timestamp":1723868237656,"user_tz":-330,"elapsed":1673,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"9847ed0e-0d9c-4277-9bf5-a9fb42f049f3"},"execution_count":59,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.distplot(df['CLMAGE'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":657},"id":"x-QtXHBfI3rM","executionInfo":{"status":"ok","timestamp":1723868237656,"user_tz":-330,"elapsed":106,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"bb4f8975-6502-40a8-edf7-5d827b780046"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-60-a1f37c02d839>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df['CLMAGE'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='CLMAGE', ylabel='Density'>"]},"metadata":{},"execution_count":60},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.countplot(x='CLMSEX',data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"5IABonOpKVOs","executionInfo":{"status":"ok","timestamp":1723868237657,"user_tz":-330,"elapsed":95,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"a8052908-0491-4eac-e734-36b3f70b4b5e"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='CLMSEX', ylabel='count'>"]},"metadata":{},"execution_count":61},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["pd.crosstab(df.ATTORNEY,df.CLMINSUR)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"v4jOvR5ML-o0","executionInfo":{"status":"ok","timestamp":1723868237657,"user_tz":-330,"elapsed":91,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"ef2e3963-ebd7-485e-e647-d8169771023e"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["CLMINSUR  0.0  1.0\n","ATTORNEY          \n","0          76  609\n","1          44  611"],"text/html":["\n","  <div id=\"df-27aeff98-39e9-4f91-a214-e0226a4d7064\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>CLMINSUR</th>\n","      <th>0.0</th>\n","      <th>1.0</th>\n","    </tr>\n","    <tr>\n","      <th>ATTORNEY</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>76</td>\n","      <td>609</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>44</td>\n","      <td>611</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27aeff98-39e9-4f91-a214-e0226a4d7064')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27aeff98-39e9-4f91-a214-e0226a4d7064 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27aeff98-39e9-4f91-a214-e0226a4d7064');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e68e22ba-2b6a-4b49-a153-a3063855fac3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e68e22ba-2b6a-4b49-a153-a3063855fac3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e68e22ba-2b6a-4b49-a153-a3063855fac3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0.0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 44,\n        \"max\": 76,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          44,\n          76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1.0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 609,\n        \"max\": 611,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          611,\n          609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["pd.crosstab(df.ATTORNEY,df.CLMINSUR).plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"ew3hAVoxN1al","executionInfo":{"status":"ok","timestamp":1723868237657,"user_tz":-330,"elapsed":88,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"65f780bd-b288-499f-cd71-6633851c1fb6"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='ATTORNEY'>"]},"metadata":{},"execution_count":63},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn import metrics\n","from sklearn.metrics import classification_report\n"],"metadata":{"id":"SG8zOmPPQHPv","executionInfo":{"status":"ok","timestamp":1723868237657,"user_tz":-330,"elapsed":82,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["x=df.iloc[:,[1,2,3,4,5]]\n","y=df.iloc[:,0]"],"metadata":{"id":"9KYMYdSagnhN","executionInfo":{"status":"ok","timestamp":1723868237661,"user_tz":-330,"elapsed":85,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"e8FBD3E2hB0R","executionInfo":{"status":"ok","timestamp":1723868237661,"user_tz":-330,"elapsed":84,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"5f56334f-32dd-48d9-bffe-322bd0bb7f77"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CLMSEX  CLMINSUR  SEATBELT  CLMAGE    LOSS\n","0        0.0       1.0       0.0    50.0  34.940\n","1        1.0       0.0       0.0    18.0   0.891\n","2        0.0       1.0       0.0     5.0   0.330\n","3        0.0       1.0       1.0    31.0   0.037\n","4        0.0       1.0       0.0    30.0   0.038\n","...      ...       ...       ...     ...     ...\n","1335     0.0       1.0       0.0     1.0   0.576\n","1336     1.0       1.0       0.0    46.0   3.705\n","1337     1.0       1.0       0.0    39.0   0.099\n","1338     1.0       0.0       0.0     8.0   3.177\n","1339     1.0       1.0       0.0    30.0   0.688\n","\n","[1340 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-41654530-38f7-4c32-8c59-ecda37023e0e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>34.940</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>0.891</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.330</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>31.0</td>\n","      <td>0.037</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.038</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.576</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>46.0</td>\n","      <td>3.705</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.0</td>\n","      <td>0.099</td>\n","    </tr>\n","    <tr>\n","      <th>1338</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>3.177</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.688</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1340 rows Ã— 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41654530-38f7-4c32-8c59-ecda37023e0e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41654530-38f7-4c32-8c59-ecda37023e0e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41654530-38f7-4c32-8c59-ecda37023e0e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1ebbc76c-ecd7-4696-bb12-e6cc0f6e6f9a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ebbc76c-ecd7-4696-bb12-e6cc0f6e6f9a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1ebbc76c-ecd7-4696-bb12-e6cc0f6e6f9a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9af445da-2109-4621-954f-a56e308ece24\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9af445da-2109-4621-954f-a56e308ece24 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 1340,\n  \"fields\": [\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49624002867855127,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2856458051886457,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22259130353816872,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.099712475053643,\n        \"min\": 0.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          15.0,\n          38.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.63690317364136,\n        \"min\": 0.0,\n        \"max\": 173.604,\n        \"num_unique_values\": 916,\n        \"samples\": [\n          7.068,\n          0.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"QnEWK4LzhDU9","executionInfo":{"status":"ok","timestamp":1723868237661,"user_tz":-330,"elapsed":82,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"9a24da10-cc7e-4050-8ad2-4ba952c30075"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       0\n","1       1\n","2       1\n","3       0\n","4       1\n","       ..\n","1335    1\n","1336    0\n","1337    1\n","1338    0\n","1339    1\n","Name: ATTORNEY, Length: 1340, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ATTORNEY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1338</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1340 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)\n","print(X_train.shape)\n","print(X_test.shape)\n","print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a-mwQWRwhEEP","executionInfo":{"status":"ok","timestamp":1723868237662,"user_tz":-330,"elapsed":81,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"09e8b054-10cf-4c46-e833-fc440cc046c7"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["(1072, 5)\n","(268, 5)\n","(1072,)\n","(268,)\n"]}]},{"cell_type":"code","source":["log=LogisticRegression()\n","log.fit(X_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"NHlbowjlhR8P","executionInfo":{"status":"ok","timestamp":1723868237662,"user_tz":-330,"elapsed":77,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"c7ec1f1f-401c-4318-f65e-c55a6867e064"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["log.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EZKMutJHhx8B","executionInfo":{"status":"ok","timestamp":1723868237662,"user_tz":-330,"elapsed":75,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"30198161-2fa1-418e-dd47-4f5b601a4805"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.38677476,  0.54317621, -0.4572426 ,  0.00196184, -0.31371066]])"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["log.intercept_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f62T3jZdiPyw","executionInfo":{"status":"ok","timestamp":1723868238683,"user_tz":-330,"elapsed":1092,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"1842451b-e6bc-499c-84d8-ed0f6f8b4420"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-0.0324866])"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["log.predict_proba(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NOlP8jODiUdg","executionInfo":{"status":"ok","timestamp":1723868291817,"user_tz":-330,"elapsed":451,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"a94b0ec3-7a24-4788-8b44-c5e5324460ed"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[9.99968081e-01, 3.19192677e-05],\n","       [4.72506481e-01, 5.27493519e-01],\n","       [3.97241000e-01, 6.02759000e-01],\n","       ...,\n","       [2.80311124e-01, 7.19688876e-01],\n","       [6.51735346e-01, 3.48264654e-01],\n","       [3.22897726e-01, 6.77102274e-01]])"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["y_pred= log.predict(x)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O5oFjygui_Jv","executionInfo":{"status":"ok","timestamp":1723868977479,"user_tz":-330,"elapsed":440,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"2184a812-9fab-41d5-ab5e-751f5e4bd700"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, ..., 1, 0, 1])"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["df[\"predict\"]=y_pred\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"qFbn4PqMlW53","executionInfo":{"status":"ok","timestamp":1723868980695,"user_tz":-330,"elapsed":982,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"c2283fa9-c298-46d1-d2d4-0c57fe6d0804"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      ATTORNEY  CLMSEX  CLMINSUR  SEATBELT  CLMAGE    LOSS  predict\n","0            0     0.0       1.0       0.0    50.0  34.940        0\n","1            1     1.0       0.0       0.0    18.0   0.891        1\n","2            1     0.0       1.0       0.0     5.0   0.330        1\n","3            0     0.0       1.0       1.0    31.0   0.037        1\n","4            1     0.0       1.0       0.0    30.0   0.038        1\n","...        ...     ...       ...       ...     ...     ...      ...\n","1335         1     0.0       1.0       0.0     1.0   0.576        1\n","1336         0     1.0       1.0       0.0    46.0   3.705        0\n","1337         1     1.0       1.0       0.0    39.0   0.099        1\n","1338         0     1.0       0.0       0.0     8.0   3.177        0\n","1339         1     1.0       1.0       0.0    30.0   0.688        1\n","\n","[1340 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-fe75d5d0-75bc-4154-a1c1-739468122311\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ATTORNEY</th>\n","      <th>CLMSEX</th>\n","      <th>CLMINSUR</th>\n","      <th>SEATBELT</th>\n","      <th>CLMAGE</th>\n","      <th>LOSS</th>\n","      <th>predict</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>50.0</td>\n","      <td>34.940</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>18.0</td>\n","      <td>0.891</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0.330</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>31.0</td>\n","      <td>0.037</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.038</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.576</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>46.0</td>\n","      <td>3.705</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>39.0</td>\n","      <td>0.099</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1338</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>3.177</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1339</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>30.0</td>\n","      <td>0.688</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1340 rows Ã— 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe75d5d0-75bc-4154-a1c1-739468122311')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fe75d5d0-75bc-4154-a1c1-739468122311 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fe75d5d0-75bc-4154-a1c1-739468122311');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e068376d-f85f-4a84-975b-c8c340e19061\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e068376d-f85f-4a84-975b-c8c340e19061')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e068376d-f85f-4a84-975b-c8c340e19061 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_66c80188-9c33-42ed-9594-d9565a9a89f2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_66c80188-9c33-42ed-9594-d9565a9a89f2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1340,\n  \"fields\": [\n    {\n      \"column\": \"ATTORNEY\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMSEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49624002867855127,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMINSUR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2856458051886457,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SEATBELT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22259130353816872,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CLMAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.099712475053643,\n        \"min\": 0.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          15.0,\n          38.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LOSS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.63690317364136,\n        \"min\": 0.0,\n        \"max\": 173.604,\n        \"num_unique_values\": 916,\n        \"samples\": [\n          7.068,\n          0.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"predict\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["pd.crosstab(df.ATTORNEY,df.predict).plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"i_Qn0kkFlalX","executionInfo":{"status":"ok","timestamp":1723869519486,"user_tz":-330,"elapsed":504,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"ed283c49-22d6-487e-9edb-4f97ebbd8ae7"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='ATTORNEY'>"]},"metadata":{},"execution_count":92},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["y_prob=pd.DataFrame(log.predict_proba(x.iloc[:,:]))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"MOf8V2IlntPI","executionInfo":{"status":"error","timestamp":1723869792906,"user_tz":-330,"elapsed":451,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"fa3d8273-e6d9-448f-b6e6-161b2a8ef98d"},"execution_count":96,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'y_prob' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-96-e967519a8060>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0my_prob\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict_proba\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'y_prob' is not defined"]}]},{"cell_type":"code","source":["actual_counts=df['ATTORNEY'].value_counts()\n","print(actual_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mSP5ymo2oozq","executionInfo":{"status":"ok","timestamp":1723870126514,"user_tz":-330,"elapsed":446,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"710b7d23-e180-4972-96b6-ba2fb6e551fb"},"execution_count":98,"outputs":[{"output_type":"stream","name":"stdout","text":["ATTORNEY\n","0    685\n","1    655\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","confusion_matrix=confusion_matrix(y,y_pred)\n","print(confusion_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zb_dDrPqqj_Q","executionInfo":{"status":"ok","timestamp":1723870229203,"user_tz":-330,"elapsed":463,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"4329da9e-2a65-4e70-f360-291bc4a0adc2"},"execution_count":99,"outputs":[{"output_type":"stream","name":"stdout","text":["[[426 259]\n"," [148 507]]\n"]}]},{"cell_type":"code","source":["pd.crosstab(y_pred,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":182},"id":"loWHWrCVrC5A","executionInfo":{"status":"ok","timestamp":1723871405357,"user_tz":-330,"elapsed":491,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"b61ec370-d300-452d-d01d-618c79b19f1c"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ATTORNEY    0    1\n","row_0             \n","0         426  148\n","1         259  507"],"text/html":["\n","  <div id=\"df-c2e16de7-73ee-4474-89ae-c5e8786b8a04\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>ATTORNEY</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","    <tr>\n","      <th>row_0</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>426</td>\n","      <td>148</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>259</td>\n","      <td>507</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2e16de7-73ee-4474-89ae-c5e8786b8a04')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c2e16de7-73ee-4474-89ae-c5e8786b8a04 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c2e16de7-73ee-4474-89ae-c5e8786b8a04');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4f77e669-944a-48c7-a11c-9a83e8cf4360\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4f77e669-944a-48c7-a11c-9a83e8cf4360')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4f77e669-944a-48c7-a11c-9a83e8cf4360 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"row_0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 118,\n        \"min\": 259,\n        \"max\": 426,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          259,\n          426\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 253,\n        \"min\": 148,\n        \"max\": 507,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          507,\n          148\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(y,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6UdtLlUevZzn","executionInfo":{"status":"ok","timestamp":1723871506168,"user_tz":-330,"elapsed":463,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"590874f9-a902-4c82-bc3d-759026f06194"},"execution_count":103,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.74      0.62      0.68       685\n","           1       0.66      0.77      0.71       655\n","\n","    accuracy                           0.70      1340\n","   macro avg       0.70      0.70      0.70      1340\n","weighted avg       0.70      0.70      0.69      1340\n","\n"]}]},{"cell_type":"markdown","source":["With the help of Classification report the"],"metadata":{"id":"KXtlq_Hnz4IT"}},{"cell_type":"code","source":[],"metadata":{"id":"q-7ARNysv6p3"},"execution_count":null,"outputs":[]}]}