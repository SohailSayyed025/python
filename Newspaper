{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMr8bzUc4JpeYhbFAmcjYPX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"pqFMHB-fq3kx","executionInfo":{"status":"ok","timestamp":1721707317775,"user_tz":-330,"elapsed":2577,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["df=pd.read_csv(\"Newspapers.csv\")"],"metadata":{"id":"thr9nSDZrHsz","executionInfo":{"status":"ok","timestamp":1721707317776,"user_tz":-330,"elapsed":60,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"id":"R5JliZxWrkLe","executionInfo":{"status":"ok","timestamp":1721707317776,"user_tz":-330,"elapsed":59,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"aff34d9c-dba7-4767-c909-60be2dfa80e4"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         Newspaper     daily    sunday\n","0                    Baltimore Sun   391.952   488.506\n","1                     Boston Globe   516.981   798.298\n","2                    Boston Herald   355.628   235.084\n","3               Charlotte Observer   238.555   299.451\n","4                Chicago Sun Times   537.780   559.093\n","5                  Chicago Tribune   733.775  1133.249\n","6              Cincinnati Enquirer   198.832   348.744\n","7                      Denver Post   252.624   417.779\n","8              Des Moines Register   206.204   344.522\n","9                 Hartford Courant   231.177   323.084\n","10               Houston Chronicle   449.755   620.752\n","11                Kansas City Star   288.571   423.305\n","12         Los Angeles Daily  News   185.736   202.614\n","13               Los Angeles Times  1164.388  1531.527\n","14                    Miami Herald   444.581   553.479\n","15        Minneapolis Star Tribune   412.871   685.975\n","16      New Orleans Times-Picayune   272.280   324.241\n","17             New York Daily News   781.796   983.240\n","18                  New York Times  1209.225  1762.015\n","19                         Newsday   825.512   960.308\n","20              Omaha World Herald   223.748   284.611\n","21          Orange County Register   354.843   407.760\n","22           Philadelphia Inquirer   515.523   982.663\n","23                Pittsburgh Press   220.465   557.000\n","24              Portland Oregonian   337.672   440.923\n","25     Providence Journal-Bulletin   197.120   268.060\n","26  Rochester Democrat & Chronicle   133.239   262.048\n","27             Rocky Mountain News   374.009   432.502\n","28                  Sacramento Bee   273.844   338.355\n","29         San Francisco Chronicle   570.364   704.322\n","30         St. Louis Post-Dispatch   391.286   585.681\n","31          St. Paul Pioneer Press   201.860   267.781\n","32                   Tampa Tribune   321.626   408.343\n","33                 Washington Post   838.902  1165.567"],"text/html":["\n","  <div id=\"df-dfda94c7-0640-4591-b4f6-8d32d4b5d83a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Newspaper</th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Baltimore Sun</td>\n","      <td>391.952</td>\n","      <td>488.506</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Boston Globe</td>\n","      <td>516.981</td>\n","      <td>798.298</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Boston Herald</td>\n","      <td>355.628</td>\n","      <td>235.084</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Charlotte Observer</td>\n","      <td>238.555</td>\n","      <td>299.451</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Chicago Sun Times</td>\n","      <td>537.780</td>\n","      <td>559.093</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Chicago Tribune</td>\n","      <td>733.775</td>\n","      <td>1133.249</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Cincinnati Enquirer</td>\n","      <td>198.832</td>\n","      <td>348.744</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Denver Post</td>\n","      <td>252.624</td>\n","      <td>417.779</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Des Moines Register</td>\n","      <td>206.204</td>\n","      <td>344.522</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Hartford Courant</td>\n","      <td>231.177</td>\n","      <td>323.084</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Houston Chronicle</td>\n","      <td>449.755</td>\n","      <td>620.752</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Kansas City Star</td>\n","      <td>288.571</td>\n","      <td>423.305</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Los Angeles Daily  News</td>\n","      <td>185.736</td>\n","      <td>202.614</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Los Angeles Times</td>\n","      <td>1164.388</td>\n","      <td>1531.527</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Miami Herald</td>\n","      <td>444.581</td>\n","      <td>553.479</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Minneapolis Star Tribune</td>\n","      <td>412.871</td>\n","      <td>685.975</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>New Orleans Times-Picayune</td>\n","      <td>272.280</td>\n","      <td>324.241</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>New York Daily News</td>\n","      <td>781.796</td>\n","      <td>983.240</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>New York Times</td>\n","      <td>1209.225</td>\n","      <td>1762.015</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Newsday</td>\n","      <td>825.512</td>\n","      <td>960.308</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Omaha World Herald</td>\n","      <td>223.748</td>\n","      <td>284.611</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Orange County Register</td>\n","      <td>354.843</td>\n","      <td>407.760</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Philadelphia Inquirer</td>\n","      <td>515.523</td>\n","      <td>982.663</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Pittsburgh Press</td>\n","      <td>220.465</td>\n","      <td>557.000</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Portland Oregonian</td>\n","      <td>337.672</td>\n","      <td>440.923</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Providence Journal-Bulletin</td>\n","      <td>197.120</td>\n","      <td>268.060</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Rochester Democrat &amp; Chronicle</td>\n","      <td>133.239</td>\n","      <td>262.048</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Rocky Mountain News</td>\n","      <td>374.009</td>\n","      <td>432.502</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Sacramento Bee</td>\n","      <td>273.844</td>\n","      <td>338.355</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>San Francisco Chronicle</td>\n","      <td>570.364</td>\n","      <td>704.322</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>St. Louis Post-Dispatch</td>\n","      <td>391.286</td>\n","      <td>585.681</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>St. Paul Pioneer Press</td>\n","      <td>201.860</td>\n","      <td>267.781</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Tampa Tribune</td>\n","      <td>321.626</td>\n","      <td>408.343</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Washington Post</td>\n","      <td>838.902</td>\n","      <td>1165.567</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dfda94c7-0640-4591-b4f6-8d32d4b5d83a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dfda94c7-0640-4591-b4f6-8d32d4b5d83a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dfda94c7-0640-4591-b4f6-8d32d4b5d83a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d2eb8b40-baef-4e8a-81d9-996bb316b1bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d2eb8b40-baef-4e8a-81d9-996bb316b1bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d2eb8b40-baef-4e8a-81d9-996bb316b1bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_69a1bf12-8d8b-4405-b2ef-4c08185d2837\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_69a1bf12-8d8b-4405-b2ef-4c08185d2837 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 34,\n  \"fields\": [\n    {\n      \"column\": \"Newspaper\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"Minneapolis Star Tribune\",\n          \"Newsday\",\n          \"Rocky Mountain News\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.2114702659259,\n        \"min\": 133.239,\n        \"max\": 1209.225,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          412.871,\n          825.512,\n          374.009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 376.4180511987298,\n        \"min\": 202.614,\n        \"max\": 1762.015,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          685.975,\n          960.308,\n          432.502\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Wd466kxsRnt","executionInfo":{"status":"ok","timestamp":1721707339377,"user_tz":-330,"elapsed":21635,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"2668f9b9-5f68-4a71-88b9-8430acb1d66a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# ***`BASIC INFORMATION OF NEWSPAPER`***"],"metadata":{"id":"oG57iKjXtyx-"}},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0T2-u1ultyPf","executionInfo":{"status":"ok","timestamp":1721707339380,"user_tz":-330,"elapsed":121,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"26c15ebd-fec3-4574-9151-d88161cbcb3e"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Newspaper    daily    sunday\n","29  San Francisco Chronicle  570.364   704.322\n","30  St. Louis Post-Dispatch  391.286   585.681\n","31   St. Paul Pioneer Press  201.860   267.781\n","32            Tampa Tribune  321.626   408.343\n","33          Washington Post  838.902  1165.567"],"text/html":["\n","  <div id=\"df-37dce666-f4c3-41e6-8583-d2621bb03ef2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Newspaper</th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>29</th>\n","      <td>San Francisco Chronicle</td>\n","      <td>570.364</td>\n","      <td>704.322</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>St. Louis Post-Dispatch</td>\n","      <td>391.286</td>\n","      <td>585.681</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>St. Paul Pioneer Press</td>\n","      <td>201.860</td>\n","      <td>267.781</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Tampa Tribune</td>\n","      <td>321.626</td>\n","      <td>408.343</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Washington Post</td>\n","      <td>838.902</td>\n","      <td>1165.567</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37dce666-f4c3-41e6-8583-d2621bb03ef2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-37dce666-f4c3-41e6-8583-d2621bb03ef2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-37dce666-f4c3-41e6-8583-d2621bb03ef2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dcd9d122-84c4-4f85-95f1-d14b73d7311b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dcd9d122-84c4-4f85-95f1-d14b73d7311b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dcd9d122-84c4-4f85-95f1-d14b73d7311b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Newspaper\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"St. Louis Post-Dispatch\",\n          \"Washington Post\",\n          \"St. Paul Pioneer Press\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 248.06078402439996,\n        \"min\": 201.86,\n        \"max\": 838.902,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          391.286,\n          838.902,\n          201.86\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 344.45150334147183,\n        \"min\": 267.781,\n        \"max\": 1165.567,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          585.681,\n          1165.567,\n          267.781\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dP_pVNHgtuDu","executionInfo":{"status":"ok","timestamp":1721707339381,"user_tz":-330,"elapsed":116,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"562a8f94-6861-4683-b400-4b82d377a5f7"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Newspaper    daily   sunday\n","0       Baltimore Sun  391.952  488.506\n","1        Boston Globe  516.981  798.298\n","2       Boston Herald  355.628  235.084\n","3  Charlotte Observer  238.555  299.451\n","4   Chicago Sun Times  537.780  559.093"],"text/html":["\n","  <div id=\"df-28ecab0b-c4d9-4e80-87a0-6a425e72b109\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Newspaper</th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Baltimore Sun</td>\n","      <td>391.952</td>\n","      <td>488.506</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Boston Globe</td>\n","      <td>516.981</td>\n","      <td>798.298</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Boston Herald</td>\n","      <td>355.628</td>\n","      <td>235.084</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Charlotte Observer</td>\n","      <td>238.555</td>\n","      <td>299.451</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Chicago Sun Times</td>\n","      <td>537.780</td>\n","      <td>559.093</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28ecab0b-c4d9-4e80-87a0-6a425e72b109')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28ecab0b-c4d9-4e80-87a0-6a425e72b109 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28ecab0b-c4d9-4e80-87a0-6a425e72b109');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a2e1ed9-521b-4d19-9ea4-a249091d35dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a2e1ed9-521b-4d19-9ea4-a249091d35dd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a2e1ed9-521b-4d19-9ea4-a249091d35dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 34,\n  \"fields\": [\n    {\n      \"column\": \"Newspaper\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"Minneapolis Star Tribune\",\n          \"Newsday\",\n          \"Rocky Mountain News\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.2114702659259,\n        \"min\": 133.239,\n        \"max\": 1209.225,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          412.871,\n          825.512,\n          374.009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 376.4180511987298,\n        \"min\": 202.614,\n        \"max\": 1762.015,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          685.975,\n          960.308,\n          432.502\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"SPNlYv6Qt8xN","executionInfo":{"status":"ok","timestamp":1721707339382,"user_tz":-330,"elapsed":115,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"83177e6a-c277-4614-bb79-8c842790a925"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             daily       sunday\n","count    34.000000    34.000000\n","mean    430.962471   591.202412\n","std     269.211470   376.418051\n","min     133.239000   202.614000\n","25%     233.021500   327.769500\n","50%     355.235500   436.712500\n","75%     516.616500   699.735250\n","max    1209.225000  1762.015000"],"text/html":["\n","  <div id=\"df-570dea32-5a29-47fc-abc0-ac27b9601779\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>34.000000</td>\n","      <td>34.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>430.962471</td>\n","      <td>591.202412</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>269.211470</td>\n","      <td>376.418051</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>133.239000</td>\n","      <td>202.614000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>233.021500</td>\n","      <td>327.769500</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>355.235500</td>\n","      <td>436.712500</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>516.616500</td>\n","      <td>699.735250</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1209.225000</td>\n","      <td>1762.015000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-570dea32-5a29-47fc-abc0-ac27b9601779')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-570dea32-5a29-47fc-abc0-ac27b9601779 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-570dea32-5a29-47fc-abc0-ac27b9601779');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d25b34c8-ab1b-4a01-9e4f-67702f3724d4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d25b34c8-ab1b-4a01-9e4f-67702f3724d4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d25b34c8-ab1b-4a01-9e4f-67702f3724d4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 362.82014542494875,\n        \"min\": 34.0,\n        \"max\": 1209.225,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          430.9624705882353,\n          355.2355,\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 530.8035411672824,\n        \"min\": 34.0,\n        \"max\": 1762.015,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          591.202411764706,\n          436.7125,\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.duplicated()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gES4_gbguA7M","executionInfo":{"status":"ok","timestamp":1721707339382,"user_tz":-330,"elapsed":113,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"ad457d1b-e6a6-4310-c41f-d675a136cffc"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     False\n","1     False\n","2     False\n","3     False\n","4     False\n","5     False\n","6     False\n","7     False\n","8     False\n","9     False\n","10    False\n","11    False\n","12    False\n","13    False\n","14    False\n","15    False\n","16    False\n","17    False\n","18    False\n","19    False\n","20    False\n","21    False\n","22    False\n","23    False\n","24    False\n","25    False\n","26    False\n","27    False\n","28    False\n","29    False\n","30    False\n","31    False\n","32    False\n","33    False\n","dtype: bool"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l3dZi-qcuDgr","executionInfo":{"status":"ok","timestamp":1721707339382,"user_tz":-330,"elapsed":106,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"3c6f542c-fd15-43fe-ca8f-41051e651387"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Newspaper     object\n","daily        float64\n","sunday       float64\n","dtype: object"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fwfxvR5nuR--","executionInfo":{"status":"ok","timestamp":1721707339385,"user_tz":-330,"elapsed":104,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"9bb8ade8-276e-469d-8a99-e379dc6672d1"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(34, 3)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-jYQjGLtuYaO","executionInfo":{"status":"ok","timestamp":1721707339386,"user_tz":-330,"elapsed":101,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"ec43a588-ee44-4393-e95e-260df666f726"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 34 entries, 0 to 33\n","Data columns (total 3 columns):\n"," #   Column     Non-Null Count  Dtype  \n","---  ------     --------------  -----  \n"," 0   Newspaper  34 non-null     object \n"," 1   daily      34 non-null     float64\n"," 2   sunday     34 non-null     float64\n","dtypes: float64(2), object(1)\n","memory usage: 944.0+ bytes\n"]}]},{"cell_type":"code","source":["x=df.iloc[:,0:1]\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"pQlj2-eNunVP","executionInfo":{"status":"ok","timestamp":1721707339389,"user_tz":-330,"elapsed":101,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"91f35a3c-7cde-42a0-d60a-59a3c6547003"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         Newspaper\n","0                    Baltimore Sun\n","1                     Boston Globe\n","2                    Boston Herald\n","3               Charlotte Observer\n","4                Chicago Sun Times\n","5                  Chicago Tribune\n","6              Cincinnati Enquirer\n","7                      Denver Post\n","8              Des Moines Register\n","9                 Hartford Courant\n","10               Houston Chronicle\n","11                Kansas City Star\n","12         Los Angeles Daily  News\n","13               Los Angeles Times\n","14                    Miami Herald\n","15        Minneapolis Star Tribune\n","16      New Orleans Times-Picayune\n","17             New York Daily News\n","18                  New York Times\n","19                         Newsday\n","20              Omaha World Herald\n","21          Orange County Register\n","22           Philadelphia Inquirer\n","23                Pittsburgh Press\n","24              Portland Oregonian\n","25     Providence Journal-Bulletin\n","26  Rochester Democrat & Chronicle\n","27             Rocky Mountain News\n","28                  Sacramento Bee\n","29         San Francisco Chronicle\n","30         St. Louis Post-Dispatch\n","31          St. Paul Pioneer Press\n","32                   Tampa Tribune\n","33                 Washington Post"],"text/html":["\n","  <div id=\"df-b2bb76e1-b51f-4976-901f-4f57267ed740\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Newspaper</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Baltimore Sun</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Boston Globe</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Boston Herald</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Charlotte Observer</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Chicago Sun Times</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Chicago Tribune</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Cincinnati Enquirer</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Denver Post</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Des Moines Register</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Hartford Courant</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Houston Chronicle</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Kansas City Star</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Los Angeles Daily  News</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Los Angeles Times</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Miami Herald</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Minneapolis Star Tribune</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>New Orleans Times-Picayune</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>New York Daily News</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>New York Times</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Newsday</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Omaha World Herald</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Orange County Register</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Philadelphia Inquirer</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Pittsburgh Press</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Portland Oregonian</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Providence Journal-Bulletin</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Rochester Democrat &amp; Chronicle</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Rocky Mountain News</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Sacramento Bee</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>San Francisco Chronicle</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>St. Louis Post-Dispatch</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>St. Paul Pioneer Press</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Tampa Tribune</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Washington Post</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2bb76e1-b51f-4976-901f-4f57267ed740')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b2bb76e1-b51f-4976-901f-4f57267ed740 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b2bb76e1-b51f-4976-901f-4f57267ed740');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3fbd67f9-e3b7-4f0c-bc43-2694eff0517d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3fbd67f9-e3b7-4f0c-bc43-2694eff0517d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3fbd67f9-e3b7-4f0c-bc43-2694eff0517d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_17c756ee-2d59-4d1e-acac-acba99e32a69\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_17c756ee-2d59-4d1e-acac-acba99e32a69 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 34,\n  \"fields\": [\n    {\n      \"column\": \"Newspaper\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"Minneapolis Star Tribune\",\n          \"Newsday\",\n          \"Rocky Mountain News\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["d=df.iloc[:,1:2]\n","d"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"UeWuhUAWusye","executionInfo":{"status":"ok","timestamp":1721707339396,"user_tz":-330,"elapsed":106,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"f738ead6-48e9-4327-eb1a-15cd956a1cdc"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       daily\n","0    391.952\n","1    516.981\n","2    355.628\n","3    238.555\n","4    537.780\n","5    733.775\n","6    198.832\n","7    252.624\n","8    206.204\n","9    231.177\n","10   449.755\n","11   288.571\n","12   185.736\n","13  1164.388\n","14   444.581\n","15   412.871\n","16   272.280\n","17   781.796\n","18  1209.225\n","19   825.512\n","20   223.748\n","21   354.843\n","22   515.523\n","23   220.465\n","24   337.672\n","25   197.120\n","26   133.239\n","27   374.009\n","28   273.844\n","29   570.364\n","30   391.286\n","31   201.860\n","32   321.626\n","33   838.902"],"text/html":["\n","  <div id=\"df-a99b501c-8ce4-485f-8026-837f20559bc3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>daily</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>391.952</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>516.981</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>355.628</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>238.555</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>537.780</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>733.775</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>198.832</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>252.624</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>206.204</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>231.177</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>449.755</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>288.571</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>185.736</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1164.388</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>444.581</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>412.871</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>272.280</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>781.796</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1209.225</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>825.512</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>223.748</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>354.843</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>515.523</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>220.465</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>337.672</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>197.120</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>133.239</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>374.009</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>273.844</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>570.364</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>391.286</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>201.860</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>321.626</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>838.902</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a99b501c-8ce4-485f-8026-837f20559bc3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a99b501c-8ce4-485f-8026-837f20559bc3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a99b501c-8ce4-485f-8026-837f20559bc3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-824ec903-c640-4ae4-ad35-a3d9e920629e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-824ec903-c640-4ae4-ad35-a3d9e920629e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-824ec903-c640-4ae4-ad35-a3d9e920629e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ca836f0c-f113-4848-99d9-1a8c875bc516\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('d')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ca836f0c-f113-4848-99d9-1a8c875bc516 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('d');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"d","summary":"{\n  \"name\": \"d\",\n  \"rows\": 34,\n  \"fields\": [\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.2114702659259,\n        \"min\": 133.239,\n        \"max\": 1209.225,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          412.871,\n          825.512,\n          374.009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["s=df.iloc[:,2:3]"],"metadata":{"id":"f5I1UnlTvgE5","executionInfo":{"status":"ok","timestamp":1721707827427,"user_tz":-330,"elapsed":446,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["s"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ppX8OQrYwFJb","executionInfo":{"status":"ok","timestamp":1721707828765,"user_tz":-330,"elapsed":16,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"f8b0a625-f191-46a4-8f7f-37d60d7036a6"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      sunday\n","0    488.506\n","1    798.298\n","2    235.084\n","3    299.451\n","4    559.093\n","5   1133.249\n","6    348.744\n","7    417.779\n","8    344.522\n","9    323.084\n","10   620.752\n","11   423.305\n","12   202.614\n","13  1531.527\n","14   553.479\n","15   685.975\n","16   324.241\n","17   983.240\n","18  1762.015\n","19   960.308\n","20   284.611\n","21   407.760\n","22   982.663\n","23   557.000\n","24   440.923\n","25   268.060\n","26   262.048\n","27   432.502\n","28   338.355\n","29   704.322\n","30   585.681\n","31   267.781\n","32   408.343\n","33  1165.567"],"text/html":["\n","  <div id=\"df-03f9535c-77f7-47fa-91d0-82eba297a876\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>488.506</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>798.298</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>235.084</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>299.451</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>559.093</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1133.249</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>348.744</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>417.779</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>344.522</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>323.084</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>620.752</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>423.305</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>202.614</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1531.527</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>553.479</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>685.975</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>324.241</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>983.240</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1762.015</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>960.308</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>284.611</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>407.760</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>982.663</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>557.000</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>440.923</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>268.060</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>262.048</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>432.502</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>338.355</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>704.322</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>585.681</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>267.781</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>408.343</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>1165.567</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03f9535c-77f7-47fa-91d0-82eba297a876')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-03f9535c-77f7-47fa-91d0-82eba297a876 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-03f9535c-77f7-47fa-91d0-82eba297a876');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eac79ddb-3464-45e3-a3e5-32b9eaebbb2e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eac79ddb-3464-45e3-a3e5-32b9eaebbb2e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eac79ddb-3464-45e3-a3e5-32b9eaebbb2e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1b7282f1-3867-41be-9a52-d1b2cbf372d9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('s')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1b7282f1-3867-41be-9a52-d1b2cbf372d9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('s');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"s","summary":"{\n  \"name\": \"s\",\n  \"rows\": 34,\n  \"fields\": [\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 376.4180511987298,\n        \"min\": 202.614,\n        \"max\": 1762.015,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          685.975,\n          960.308,\n          432.502\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["all=df.iloc[:,1:3]\n","all"],"metadata":{"id":"YtakPaYuwrnT","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1721707868718,"user_tz":-330,"elapsed":570,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"c8eb0f34-a8cc-486e-e604-b7422b4958fa"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       daily    sunday\n","0    391.952   488.506\n","1    516.981   798.298\n","2    355.628   235.084\n","3    238.555   299.451\n","4    537.780   559.093\n","5    733.775  1133.249\n","6    198.832   348.744\n","7    252.624   417.779\n","8    206.204   344.522\n","9    231.177   323.084\n","10   449.755   620.752\n","11   288.571   423.305\n","12   185.736   202.614\n","13  1164.388  1531.527\n","14   444.581   553.479\n","15   412.871   685.975\n","16   272.280   324.241\n","17   781.796   983.240\n","18  1209.225  1762.015\n","19   825.512   960.308\n","20   223.748   284.611\n","21   354.843   407.760\n","22   515.523   982.663\n","23   220.465   557.000\n","24   337.672   440.923\n","25   197.120   268.060\n","26   133.239   262.048\n","27   374.009   432.502\n","28   273.844   338.355\n","29   570.364   704.322\n","30   391.286   585.681\n","31   201.860   267.781\n","32   321.626   408.343\n","33   838.902  1165.567"],"text/html":["\n","  <div id=\"df-a08ac834-2172-4ca9-b432-f8fd87bd98d5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>391.952</td>\n","      <td>488.506</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>516.981</td>\n","      <td>798.298</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>355.628</td>\n","      <td>235.084</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>238.555</td>\n","      <td>299.451</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>537.780</td>\n","      <td>559.093</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>733.775</td>\n","      <td>1133.249</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>198.832</td>\n","      <td>348.744</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>252.624</td>\n","      <td>417.779</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>206.204</td>\n","      <td>344.522</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>231.177</td>\n","      <td>323.084</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>449.755</td>\n","      <td>620.752</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>288.571</td>\n","      <td>423.305</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>185.736</td>\n","      <td>202.614</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1164.388</td>\n","      <td>1531.527</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>444.581</td>\n","      <td>553.479</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>412.871</td>\n","      <td>685.975</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>272.280</td>\n","      <td>324.241</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>781.796</td>\n","      <td>983.240</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1209.225</td>\n","      <td>1762.015</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>825.512</td>\n","      <td>960.308</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>223.748</td>\n","      <td>284.611</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>354.843</td>\n","      <td>407.760</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>515.523</td>\n","      <td>982.663</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>220.465</td>\n","      <td>557.000</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>337.672</td>\n","      <td>440.923</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>197.120</td>\n","      <td>268.060</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>133.239</td>\n","      <td>262.048</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>374.009</td>\n","      <td>432.502</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>273.844</td>\n","      <td>338.355</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>570.364</td>\n","      <td>704.322</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>391.286</td>\n","      <td>585.681</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>201.860</td>\n","      <td>267.781</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>321.626</td>\n","      <td>408.343</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>838.902</td>\n","      <td>1165.567</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a08ac834-2172-4ca9-b432-f8fd87bd98d5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a08ac834-2172-4ca9-b432-f8fd87bd98d5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a08ac834-2172-4ca9-b432-f8fd87bd98d5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-525ef188-c403-4ba9-bdde-9043bc541ccd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-525ef188-c403-4ba9-bdde-9043bc541ccd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-525ef188-c403-4ba9-bdde-9043bc541ccd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bd1dec3d-0cd0-4904-bb40-6d358156443a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('all')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bd1dec3d-0cd0-4904-bb40-6d358156443a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('all');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"all","summary":"{\n  \"name\": \"all\",\n  \"rows\": 34,\n  \"fields\": [\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.2114702659259,\n        \"min\": 133.239,\n        \"max\": 1209.225,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          412.871,\n          825.512,\n          374.009\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 376.4180511987298,\n        \"min\": 202.614,\n        \"max\": 1762.015,\n        \"num_unique_values\": 34,\n        \"samples\": [\n          685.975,\n          960.308,\n          432.502\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["# ***`OUTLIERS`***"],"metadata":{"id":"JnE2ZDkjwsHF"}},{"cell_type":"code","source":["df.boxplot(figsize=(12,5))\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":525},"id":"su8kKsiKwFr6","executionInfo":{"status":"ok","timestamp":1721707340118,"user_tz":-330,"elapsed":822,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"f1c422a6-b1b2-4bfc-c0ac-d58f0e7035dd"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"YV-ivzMZxF50"}},{"cell_type":"code","source":["plt.figure(figsize=(12,5))\n","sns.heatmap(all.corr(),annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"id":"EDv19avPxE-r","executionInfo":{"status":"ok","timestamp":1721707887464,"user_tz":-330,"elapsed":1254,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"ac4c611e-3250-4ef3-dae8-e34aefc62ff6"},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["all.cov()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"h474UWzrybYZ","executionInfo":{"status":"ok","timestamp":1721707933898,"user_tz":-330,"elapsed":467,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"b68e8bd6-bd6e-4c8f-d774-c11ffe5a02b3"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               daily         sunday\n","daily   72474.815723   97095.580184\n","sunday  97095.580184  141690.549268"],"text/html":["\n","  <div id=\"df-5175e877-7edc-4d09-9473-4d0141e73ecb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>daily</th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>daily</th>\n","      <td>72474.815723</td>\n","      <td>97095.580184</td>\n","    </tr>\n","    <tr>\n","      <th>sunday</th>\n","      <td>97095.580184</td>\n","      <td>141690.549268</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5175e877-7edc-4d09-9473-4d0141e73ecb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5175e877-7edc-4d09-9473-4d0141e73ecb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5175e877-7edc-4d09-9473-4d0141e73ecb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c9f7ca6-aec4-4d66-a7a8-2e5a1961aaac\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c9f7ca6-aec4-4d66-a7a8-2e5a1961aaac')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c9f7ca6-aec4-4d66-a7a8-2e5a1961aaac button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"all\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17409.509508690007,\n        \"min\": 72474.81572274152,\n        \"max\": 97095.58018419429,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          97095.58018419429,\n          72474.81572274152\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31533.405046139927,\n        \"min\": 97095.58018419429,\n        \"max\": 141690.54926824957,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          141690.54926824957,\n          97095.58018419429\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":[],"metadata":{"id":"5fwMnHHBxFV6"}},{"cell_type":"code","source":["col=['daily','sunday']\n","for i in col:\n","  plt.figure(figsize=(12,5))\n","  sns.boxplot(df[i])\n","  plt.title(f'BOX PLOT IF {i}')\n","  plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":688},"id":"9lauJYb3wOy6","executionInfo":{"status":"ok","timestamp":1721707399488,"user_tz":-330,"elapsed":967,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"fd2c8866-1ad1-45a8-fb21-e004b69f4d32"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.hist(figsize=(12,3))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":254},"id":"O5tXPHgdyGea","executionInfo":{"status":"ok","timestamp":1721707406045,"user_tz":-330,"elapsed":1033,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"89d4c922-4751-4320-c9af-ab6ea1d08a58"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x300 with 2 Axes>"],"image/png":"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tGYvLS21th2abAAA4Ai/36+srCxNnz5dktS1a1ft3LlT8+bNO2+TPWHCBBUWFgauezweZWRkKCcnR0lJSdXO4vP5VFxcrIlbYuT1u6q9Hie4Y4ymZvlrLfvOybnW1lVe9759+youLs7aemsD2Z0RydmlyM4f7dnLPxllA002AABwRPPmzdWuXbugZddee61ee+21897H7XbL7XZXWB4XF2floM/rd8lbFllNdrnayh6Kg2tbfz8nkN0ZkZxdiuz80Zrd5j5xCi8AAOCI3r17a9euXUHLdu/erVatWjmUCACAmqPJBgAAjhgzZow++ugjTZ8+XXv37tWiRYs0f/585efnOx0NAIBqo8kGAACO6Natm5YuXarFixerQ4cOmjp1qmbPnq28vDynowEAUG18JxsAADjmtttu02233eZ0DAAArOGdbAAAAAAALKHJBgAAAADAEppsAAAAAAAsockGAAAAAMASmmwAAAAAACyhyQYAAAAAwBKabAAAAAAALKHJBgAAAADAEppsAAAAAAAsockGAAAAAMASmmwAAAAAACwJeZM9Y8YMuVwuFRQUhHpTAAAAAAA4ql4oV75582Y9/fTT6tSpUyg3AwAAgFrSevxb1tbljjWa2V3qMHmVvGWuaq/nixn9rWUCgJoK2TvZp06dUl5enp555hk1btw4VJsBAAAAACBshOyd7Pz8fPXv31/Z2dl67LHHzjvO6/XK6/UGrns8HkmSz+eTz+ercQ53rKnxOipdb4wJ+m9dZ7seNv72TirPH+n7YRM1CUY9goWqHtQXAADUtpA02S+++KK2bdumzZs3X3RsUVGRpkyZUmH56tWrlZiYWOMsM7vXeBUXNDXLH9oNRBhb9VixYoWV9TituLjY6Qhhh5oEox7BbNejtLTU6voAAAAuxnqTfeDAAT300EMqLi5WfHz8RcdPmDBBhYWFgesej0cZGRnKyclRUlJSjfN0mLyqxuuojDvGaGqWXxO3xMjrr/53iKKF7XrsnJxrIZVzfD6fiouL1bdvX8XFxTkdJyxQk2DUI1io6lH+6SgAAIDaYr3J3rp1q44eParrrrsusKysrEzr1q3TH//4R3m9XsXGxgZuc7vdcrvdFdYTFxdn5UCrJj+icUnr97tCvo1IYqse0dJ02HocRxNqEox6BLNdD2oLAABqm/Um+5ZbbtGnn34atGz48OFq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MLdH4hwcyfNlJM1tkTwHRfp8cbHal1uyZInp3LmzSU9PN//1X/8VFvkvln3v3r2mSZMmZuzYsWbbtm1m79695vXXXzdHjhwJjHHq9edi2e+//37Tpk0bs3btWlNSUmKefvppExsba15//fVaz06TfR5Hjx41ksz7779vjPnnEz4uLs688sorgTGff/65kWQ2bNhgjPnnHz4mJsYcPnw4MGbu3LkmKSnJeL3e2t0BS06ePGmuuuoqU1xcbG666abABF8X6zFu3Dhzww03nPd2v99vmjVrZn73u98Flh0/fty43W6zePFiY4wxn332mZFkNm/eHBjz9ttvG5fLZQ4ePBi68CHQv39/c9999wUt+8lPfmLy8vKMMXWvHue+2Nva/6eeeso0btw46Dkzbtw4c80114R4j2rmQgcd5TZt2mQkmf379xtjorseCA+RNrdH6hwcyfNlpM5tkTwHRfp8cb78//u//2uuuOIKs3PnTtOqVaugJjtc8leW/c477zR33333ee8TLq8/lWVv3769efTRR4OWXXfddea3v/1trWfn4+LnceLECUlSkyZNJElbt26Vz+dTdnZ2YEzbtm3VsmVLbdiwQZK0YcMGdezYUWlpaYExubm58ng8+u///u9aTG9Pfn6++vfvH7TfUt2sx/Lly5WVlaWf//znSk1NVdeuXfXMM88Ebi8pKdHhw4eDapKcnKwePXoE1aRRo0bKysoKjMnOzlZMTIw2btxYeztjQa9evbRmzRrt3r1bkvTxxx9r/fr16tevn6S6V49z2dr/DRs26Ic//KHq168fGJObm6tdu3bpm2++qaW9CY0TJ07I5XKpUaNGkqgHQi/S5vZInYMjeb6Mlrkt2uagSJsv/H6/hg4dqrFjx6p9+/YVbg/X/H6/X2+99Zauvvpq5ebmKjU1VT169Aj6WHY4v/706tVLy5cv18GDB2WM0dq1a7V7927l5OTUenaa7Er4/X4VFBSod+/e6tChgyTp8OHDql+/fuDJXS4tLU2HDx8OjPn+H6T89vLbIs2LL76obdu2qaioqMJtdbEe+/bt09y5c3XVVVdp1apV+uUvf6nRo0fr+eefl/T/96myff5+TVJTU4Nur1evnpo0aRJxNRk/fryGDBmitm3bKi4uTl27dlVBQYHy8vIk1b16nMvW/kfb86jcmTNnNG7cON11111KSkqS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\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.distplot(df['daily'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":657},"id":"F5e4WOc2zmPE","executionInfo":{"status":"ok","timestamp":1721707412185,"user_tz":-330,"elapsed":631,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"64750051-250c-428a-f07a-bd7db36d00e4"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-24-ef820e5f1e6c>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df['daily'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='daily', ylabel='Density'>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.distplot(df['sunday'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":657},"id":"_dpSuAVRzxrE","executionInfo":{"status":"ok","timestamp":1721707413762,"user_tz":-330,"elapsed":898,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"85e93fa9-227b-426f-8713-57125542bd68"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-25-ce0649bd17ee>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df['sunday'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='sunday', ylabel='Density'>"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# ***`ANOVA TEST`***"],"metadata":{"id":"bI6vyuVx0aqA"}},{"cell_type":"code","source":["from scipy.stats import f_oneway"],"metadata":{"id":"JSMieYK40B4F","executionInfo":{"status":"ok","timestamp":1721707420224,"user_tz":-330,"elapsed":1100,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["col=['daily','sunday']"],"metadata":{"id":"Q4cYtV3f0sL1","executionInfo":{"status":"ok","timestamp":1721707420224,"user_tz":-330,"elapsed":7,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["result=f_oneway(df['daily'],df['sunday'])\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g-VYsPO_0w7k","executionInfo":{"status":"ok","timestamp":1721707423129,"user_tz":-330,"elapsed":476,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"19581ec2-4bf9-40f0-bdc3-d71c8749c9bb"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["F_onewayResult(statistic=4.076347814114767, pvalue=0.04755289312847025)"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["# ***`Interpretation`***\n","* F-statistic :This value(4.076347814114767) represents the variation between the group means relative to the variation within the groups. A higher F-statistic suggests greater differences between the group means.\n","\n","\n","* p-value (0.04755289312847025): This value represents the probability of observing such an F-statistic (or one more extreme) if there were no actual differences between the group means (i.e., the null hypothesis is true).\n","\n","\n","* Since the p-value (0.0475...) is less than 0.05, we reject the null hypothesis. This means there is sufficient evidence to suggest that there is a statistically significant difference between the means of at least two of the groups being compared.\n"],"metadata":{"id":"z08PFzvR1MF3"}},{"cell_type":"code","source":["d.mean()"],"metadata":{"id":"5oenWBZU4BPz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721707618988,"user_tz":-330,"elapsed":473,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"31eff7bb-cb10-460b-ef87-355c140b46fc"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["daily    430.962471\n","dtype: float64"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["d.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"vHrb1l6Z072L","executionInfo":{"status":"ok","timestamp":1721707655573,"user_tz":-330,"elapsed":467,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"da959e5f-59b9-45ef-b878-754d8b1c3bce"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       daily\n","daily    1.0"],"text/html":["\n","  <div id=\"df-0fc8633b-0966-4fbe-a428-2bc73990c055\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>daily</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>daily</th>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fc8633b-0966-4fbe-a428-2bc73990c055')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0fc8633b-0966-4fbe-a428-2bc73990c055 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0fc8633b-0966-4fbe-a428-2bc73990c055');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"d\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"daily\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["s.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"KMTYIakjxezr","executionInfo":{"status":"ok","timestamp":1721707664589,"user_tz":-330,"elapsed":11,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"d64a6dbe-f1ca-4abc-8126-0768d66745ef"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        sunday\n","sunday     1.0"],"text/html":["\n","  <div id=\"df-58f2ab28-8af1-401a-b524-4f898dc1535c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sunday</th>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58f2ab28-8af1-401a-b524-4f898dc1535c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-58f2ab28-8af1-401a-b524-4f898dc1535c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-58f2ab28-8af1-401a-b524-4f898dc1535c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"s\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["s.cov()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"badIsg0ExhEa","executionInfo":{"status":"ok","timestamp":1721707674257,"user_tz":-330,"elapsed":11,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"afe6cb66-869f-44bc-ad8b-2bef3dda9617"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               sunday\n","sunday  141690.549268"],"text/html":["\n","  <div id=\"df-b0bcedc2-e7e2-4cf9-9ae0-2978902ed048\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sunday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sunday</th>\n","      <td>141690.549268</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0bcedc2-e7e2-4cf9-9ae0-2978902ed048')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b0bcedc2-e7e2-4cf9-9ae0-2978902ed048 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b0bcedc2-e7e2-4cf9-9ae0-2978902ed048');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"s\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"sunday\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 141690.54926824957,\n        \"max\": 141690.54926824957,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          141690.54926824957\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["df.plot.scatter(x='daily',y='sunday')"],"metadata":{"id":"tbSV_Jcq25am","executionInfo":{"status":"ok","timestamp":1721709090218,"user_tz":-330,"elapsed":555,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"a513f1c3-f9af-4091-ea03-d3d052dab044","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='daily', ylabel='sunday'>"]},"metadata":{},"execution_count":48},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"3CZKK3XNxjXa"},"execution_count":null,"outputs":[]}]}