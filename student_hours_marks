{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOXbR0CjUwF5k54AC+0Ul2s"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"xgSaRIqPu7SK","executionInfo":{"status":"ok","timestamp":1721881603619,"user_tz":-330,"elapsed":4930,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib as plt\n","import seaborn as sns\n","import sklearn\n"]},{"cell_type":"code","source":["import google.colab\n","google.colab.drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uNyyRdpTzc0w","executionInfo":{"status":"ok","timestamp":1721881628627,"user_tz":-330,"elapsed":25018,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"25121abf-a91c-414c-9342-7bf9ad9ad3be"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df=pd.read_csv('/content/drive/MyDrive/score.csv')"],"metadata":{"id":"MDdhfEycz_YD","executionInfo":{"status":"ok","timestamp":1721881628628,"user_tz":-330,"elapsed":14,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"z6YiOY781fwl","executionInfo":{"status":"ok","timestamp":1721881628628,"user_tz":-330,"elapsed":11,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["# ***as there are only one independent variable we will apply single linear regression***"],"metadata":{"id":"cdg8Gpva1hdv"}},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":833},"id":"UgSuOd430XZE","executionInfo":{"status":"ok","timestamp":1721881629748,"user_tz":-330,"elapsed":1130,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"47d2d343-2416-4f4c-992f-b0cd73e0c179"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Hours  Scores\n","0     2.5      21\n","1     5.1      47\n","2     3.2      27\n","3     8.5      75\n","4     3.5      30\n","5     1.5      20\n","6     9.2      88\n","7     5.5      60\n","8     8.3      81\n","9     2.7      25\n","10    7.7      85\n","11    5.9      62\n","12    4.5      41\n","13    3.3      42\n","14    1.1      17\n","15    8.9      95\n","16    2.5      30\n","17    1.9      24\n","18    6.1      67\n","19    7.4      69\n","20    2.7      30\n","21    4.8      54\n","22    3.8      35\n","23    6.9      76\n","24    7.8      86"],"text/html":["\n","  <div id=\"df-9bcd7837-4dd3-4dc5-a5c4-698cc95ce4eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.5</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.1</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.2</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8.5</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.5</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>9.2</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>5.5</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8.3</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.7</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>7.7</td>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>5.9</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>4.5</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>3.3</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1.1</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>8.9</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2.5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1.9</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>6.1</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>7.4</td>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2.7</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>4.8</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>3.8</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>6.9</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>7.8</td>\n","      <td>86</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9bcd7837-4dd3-4dc5-a5c4-698cc95ce4eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9bcd7837-4dd3-4dc5-a5c4-698cc95ce4eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9bcd7837-4dd3-4dc5-a5c4-698cc95ce4eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-26e92bbc-79b5-4da1-adbb-09fa6b67ae26\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26e92bbc-79b5-4da1-adbb-09fa6b67ae26')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-26e92bbc-79b5-4da1-adbb-09fa6b67ae26 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9cd5e890-bf88-48fd-8e9c-d0553dc83940\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9cd5e890-bf88-48fd-8e9c-d0553dc83940 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5250940576540906,\n        \"min\": 1.1,\n        \"max\": 9.2,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          8.9,\n          2.7,\n          2.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 17,\n        \"max\": 95,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          95,\n          25,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"FC84I_Su0Ydy","executionInfo":{"status":"ok","timestamp":1721881629748,"user_tz":-330,"elapsed":74,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"6d9e072b-fb7d-45e9-9c55-267fb544e34c"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Hours     Scores\n","count  25.000000  25.000000\n","mean    5.012000  51.480000\n","std     2.525094  25.286887\n","min     1.100000  17.000000\n","25%     2.700000  30.000000\n","50%     4.800000  47.000000\n","75%     7.400000  75.000000\n","max     9.200000  95.000000"],"text/html":["\n","  <div id=\"df-00839a83-662f-4e82-a706-6a537af50ecc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>25.000000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.012000</td>\n","      <td>51.480000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.525094</td>\n","      <td>25.286887</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.100000</td>\n","      <td>17.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.700000</td>\n","      <td>30.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.800000</td>\n","      <td>47.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7.400000</td>\n","      <td>75.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9.200000</td>\n","      <td>95.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00839a83-662f-4e82-a706-6a537af50ecc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-00839a83-662f-4e82-a706-6a537af50ecc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-00839a83-662f-4e82-a706-6a537af50ecc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0e00c404-6cbb-4720-9cce-88eda5227362\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0e00c404-6cbb-4720-9cce-88eda5227362')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0e00c404-6cbb-4720-9cce-88eda5227362 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.660098285663746,\n        \"min\": 1.1,\n        \"max\": 25.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.012,\n          4.8,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.358571628410314,\n        \"min\": 17.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          51.48,\n          47.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ba1CIqq00iqy","executionInfo":{"status":"ok","timestamp":1721881629754,"user_tz":-330,"elapsed":77,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"cc2628f8-e556-45fc-a7ee-24068f73eed3"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25 entries, 0 to 24\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Hours   25 non-null     float64\n"," 1   Scores  25 non-null     int64  \n","dtypes: float64(1), int64(1)\n","memory usage: 528.0 bytes\n"]}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"3z8xW1CB0kty","executionInfo":{"status":"ok","timestamp":1721881629754,"user_tz":-330,"elapsed":72,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"3dd32c4d-2d9c-4586-aadc-4cba13484f06"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Hours    Scores\n","Hours   1.000000  0.976191\n","Scores  0.976191  1.000000"],"text/html":["\n","  <div id=\"df-41d30669-e12e-4228-a91b-2cc5700f36d3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Hours</th>\n","      <td>1.000000</td>\n","      <td>0.976191</td>\n","    </tr>\n","    <tr>\n","      <th>Scores</th>\n","      <td>0.976191</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41d30669-e12e-4228-a91b-2cc5700f36d3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41d30669-e12e-4228-a91b-2cc5700f36d3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41d30669-e12e-4228-a91b-2cc5700f36d3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-89f7e755-a288-47c9-82f1-b01360886745\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89f7e755-a288-47c9-82f1-b01360886745')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-89f7e755-a288-47c9-82f1-b01360886745 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.016835748582384437,\n        \"min\": 0.9761906560220883,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.9761906560220883,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.016835748582384437,\n        \"min\": 0.9761906560220883,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.9761906560220883\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.cov()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"wykbCMpn4l3s","executionInfo":{"status":"ok","timestamp":1721881629754,"user_tz":-330,"elapsed":70,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"aa99960e-8370-4934-8546-67d647cd8b72"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Hours      Scores\n","Hours    6.3761   62.331500\n","Scores  62.3315  639.426667"],"text/html":["\n","  <div id=\"df-c5700ad8-03b2-435e-a0d4-af5a3df3b934\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Hours</th>\n","      <td>6.3761</td>\n","      <td>62.331500</td>\n","    </tr>\n","    <tr>\n","      <th>Scores</th>\n","      <td>62.3315</td>\n","      <td>639.426667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5700ad8-03b2-435e-a0d4-af5a3df3b934')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c5700ad8-03b2-435e-a0d4-af5a3df3b934 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c5700ad8-03b2-435e-a0d4-af5a3df3b934');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-14fdb342-81dc-4bb6-8f09-beeac3050e82\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-14fdb342-81dc-4bb6-8f09-beeac3050e82')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-14fdb342-81dc-4bb6-8f09-beeac3050e82 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.566442784005744,\n        \"min\": 6.376099999999999,\n        \"max\": 62.331500000000005,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          62.331500000000005,\n          6.376099999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scores\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 408.06790573998074,\n        \"min\": 62.331500000000005,\n        \"max\": 639.4266666666665,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          639.4266666666665,\n          62.331500000000005\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["x=df.iloc[:,0:1]\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":833},"id":"dTXoWicL0n2S","executionInfo":{"status":"ok","timestamp":1721881629755,"user_tz":-330,"elapsed":69,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"d0fd07f4-602c-498a-e429-8bc0624e5ef8"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Hours\n","0     2.5\n","1     5.1\n","2     3.2\n","3     8.5\n","4     3.5\n","5     1.5\n","6     9.2\n","7     5.5\n","8     8.3\n","9     2.7\n","10    7.7\n","11    5.9\n","12    4.5\n","13    3.3\n","14    1.1\n","15    8.9\n","16    2.5\n","17    1.9\n","18    6.1\n","19    7.4\n","20    2.7\n","21    4.8\n","22    3.8\n","23    6.9\n","24    7.8"],"text/html":["\n","  <div id=\"df-9298dbde-83ec-463d-9b2a-f32aba167175\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.5</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>9.2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>5.5</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8.3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.7</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>7.7</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>5.9</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>3.3</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1.1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>8.9</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>6.1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>7.4</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2.7</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>4.8</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>3.8</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>6.9</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>7.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9298dbde-83ec-463d-9b2a-f32aba167175')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9298dbde-83ec-463d-9b2a-f32aba167175 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9298dbde-83ec-463d-9b2a-f32aba167175');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f230c78c-a81f-4312-aa67-2ddc6194f53f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f230c78c-a81f-4312-aa67-2ddc6194f53f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f230c78c-a81f-4312-aa67-2ddc6194f53f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f1990250-22e2-48cc-aea7-bfdcdbff3f94\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f1990250-22e2-48cc-aea7-bfdcdbff3f94 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5250940576540906,\n        \"min\": 1.1,\n        \"max\": 9.2,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          8.9,\n          2.7,\n          2.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["y=df.iloc[:,-1]\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ya4Cd4qr1zqD","executionInfo":{"status":"ok","timestamp":1721881629755,"user_tz":-330,"elapsed":67,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"e1cd57a1-9370-44c3-a1fb-db3dfaf33350"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     21\n","1     47\n","2     27\n","3     75\n","4     30\n","5     20\n","6     88\n","7     60\n","8     81\n","9     25\n","10    85\n","11    62\n","12    41\n","13    42\n","14    17\n","15    95\n","16    30\n","17    24\n","18    67\n","19    69\n","20    30\n","21    54\n","22    35\n","23    76\n","24    86\n","Name: Scores, dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.plot.scatter(x='Hours',y='Scores',c='red')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"4Srt8b3w2Qq2","executionInfo":{"status":"ok","timestamp":1721881629755,"user_tz":-330,"elapsed":61,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"c3963089-c3aa-4e28-d83a-46164cb0c0e6"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Hours', ylabel='Scores'>"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","sns.heatmap(df.corr(),annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":453},"id":"8638Yi-_2XB2","executionInfo":{"status":"ok","timestamp":1721881630459,"user_tz":-330,"elapsed":759,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"2f6ff7a7-0166-4b11-a464-720c72286540"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"DsSpOtO82k_a","executionInfo":{"status":"ok","timestamp":1721881630459,"user_tz":-330,"elapsed":114,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"e4d50eb1-4254-4df1-d2b2-4c1340afc5ff"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.pairplot(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":531},"id":"EkEWJci53VOV","executionInfo":{"status":"ok","timestamp":1721881631740,"user_tz":-330,"elapsed":1388,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"266e6669-3e48-4c26-c165-394da20e94ce"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x7d1f60f3a740>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.distplot(df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"id":"F4TtjhRn3xKV","executionInfo":{"status":"ok","timestamp":1721881632323,"user_tz":-330,"elapsed":632,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"269702d8-65ca-43c2-b2fd-75f0bc1fac96"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-16-527cbf673b18>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df)\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Density'>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x='Hours',y='Scores',data=df,color='purple')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"1Sl3lnXZ35PF","executionInfo":{"status":"ok","timestamp":1721881632956,"user_tz":-330,"elapsed":665,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"b36f16f1-c19a-4d26-d008-25410064d4bc"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Hours', ylabel='Scores'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.pyplot.plot(x, y, color='red', marker='o')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"-vKBM7Wm4K2V","executionInfo":{"status":"ok","timestamp":1721881633862,"user_tz":-330,"elapsed":919,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"ef4b26b9-efd8-42c3-c15a-847653a3d63a"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7d1f19e79ed0>]"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[" from sklearn.model_selection import train_test_split\n"," from sklearn.linear_model import LinearRegression\n"," from sklearn.metrics import r2_score\n"," x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)\n"," x_train\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"s1ucNr9I6IJX","executionInfo":{"status":"ok","timestamp":1721881633862,"user_tz":-330,"elapsed":80,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"3c063ad2-b635-40a1-bd2d-3f774a943a40"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Hours\n","22    3.8\n","17    1.9\n","24    7.8\n","23    6.9\n","14    1.1\n","1     5.1\n","10    7.7\n","13    3.3\n","8     8.3\n","6     9.2\n","18    6.1\n","4     3.5\n","9     2.7\n","7     5.5\n","20    2.7\n","3     8.5\n","0     2.5\n","21    4.8\n","15    8.9\n","12    4.5"],"text/html":["\n","  <div id=\"df-c11e6ac7-6a0b-4b0b-9fa5-e12bf67142d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22</th>\n","      <td>3.8</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>7.8</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>6.9</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>7.7</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>3.3</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8.3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>9.2</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>6.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.5</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.7</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>5.5</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8.5</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>4.8</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>8.9</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>4.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c11e6ac7-6a0b-4b0b-9fa5-e12bf67142d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c11e6ac7-6a0b-4b0b-9fa5-e12bf67142d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c11e6ac7-6a0b-4b0b-9fa5-e12bf67142d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ded92111-560e-4347-8570-550c64b3d824\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ded92111-560e-4347-8570-550c64b3d824')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ded92111-560e-4347-8570-550c64b3d824 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a4cc897d-b62c-496c-85a2-b2ba9c9048fe\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a4cc897d-b62c-496c-85a2-b2ba9c9048fe button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x_train","summary":"{\n  \"name\": \"x_train\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"Hours\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.5502115495323956,\n        \"min\": 1.1,\n        \"max\": 9.2,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          3.8,\n          5.1,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":[" y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XXrPAL7O6PsJ","executionInfo":{"status":"ok","timestamp":1721881633863,"user_tz":-330,"elapsed":71,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"fc5cd52c-d007-4957-b289-9c59446bc701"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["22    35\n","17    24\n","24    86\n","23    76\n","14    17\n","1     47\n","10    85\n","13    42\n","8     81\n","6     88\n","18    67\n","4     30\n","9     25\n","7     60\n","20    30\n","3     75\n","0     21\n","21    54\n","15    95\n","12    41\n","Name: Scores, dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["print(x_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BAqZW_Nb6sRQ","executionInfo":{"status":"ok","timestamp":1721881663845,"user_tz":-330,"elapsed":620,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"0788b126-d1d6-4b46-a1ae-e7360accb120"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["    Hours\n","5     1.5\n","2     3.2\n","19    7.4\n","16    2.5\n","11    5.9\n"]}]},{"cell_type":"code","source":["model=LinearRegression()\n","model.fit(x_train,y_train)\n"],"metadata":{"id":"mdIS3NrJAPxE","executionInfo":{"status":"ok","timestamp":1721882656652,"user_tz":-330,"elapsed":430,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"colab":{"base_uri":"https://localhost:8080/","height":75},"outputId":"02ec375d-f66e-4f86-c2c4-3927276b1a63"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["print(f'INTERcept:{model.intercept_}')\n","print(f'coefficient:{model.coef_[0]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DDaSjbNMJjO2","executionInfo":{"status":"ok","timestamp":1721882113346,"user_tz":-330,"elapsed":403,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"4d519b5b-6b8f-46ef-81eb-64db8fc67eed"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["INTERcept:2.018160041434662\n","coefficient:9.91065648064224\n"]}]},{"cell_type":"code","source":["ypred=model.predict(x_test)\n","ypred\n","print(\"Actual values:\",y_test)\n","\n","print(\"predicted values\",ypred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2vUwZeyKvcX","executionInfo":{"status":"ok","timestamp":1721882796010,"user_tz":-330,"elapsed":431,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"fdaca4be-0d90-46d9-e900-6855442405d9"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Actual values: 5     20\n","2     27\n","19    69\n","16    30\n","11    62\n","Name: Scores, dtype: int64\n","predicted values [16.88414476 33.73226078 75.357018   26.79480124 60.49103328]\n"]}]},{"cell_type":"code","source":["r2=r2_score(y_test,ypred)\n","r2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t58OYM6GMHPY","executionInfo":{"status":"ok","timestamp":1721882968198,"user_tz":-330,"elapsed":421,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"49756c54-5590-4c08-be2b-b51e25c3554f"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9454906892105354"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","mse = mean_squared_error(y_test, ypred)\n","mse=mean_squared_error(y_test,ypred)\n","mse\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kcRcokLxOPxQ","executionInfo":{"status":"ok","timestamp":1721883308760,"user_tz":-330,"elapsed":427,"user":{"displayName":"SHYNYTE","userId":"03300152360068687736"}},"outputId":"abf36781-91e2-49a0-f028-c08ad14a53e7"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["21.598769307217456"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":[],"metadata":{"id":"r1EVaIkvOapv"},"execution_count":null,"outputs":[]}]}